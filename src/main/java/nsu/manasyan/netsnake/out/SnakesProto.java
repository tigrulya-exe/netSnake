// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: snakes.proto

package nsu.manasyan.netsnake.out;

public final class SnakesProto {
  private SnakesProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface GamePlayerOrBuilder extends
      // @@protoc_insertion_point(interface_extends:snakes.GamePlayer)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Имя игрока (для отображения в интерфейсе)
     * </pre>
     *
     * <code>required string name = 1;</code>
     * @return Whether the name field is set.
     */
    boolean hasName();
    /**
     * <pre>
     * Имя игрока (для отображения в интерфейсе)
     * </pre>
     *
     * <code>required string name = 1;</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <pre>
     * Имя игрока (для отображения в интерфейсе)
     * </pre>
     *
     * <code>required string name = 1;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * Уникальный идентификатор игрока в пределах игры
     * </pre>
     *
     * <code>required int32 id = 2;</code>
     * @return Whether the id field is set.
     */
    boolean hasId();
    /**
     * <pre>
     * Уникальный идентификатор игрока в пределах игры
     * </pre>
     *
     * <code>required int32 id = 2;</code>
     * @return The id.
     */
    int getId();

    /**
     * <pre>
     * IPv4 или IPv6 адрес игрока в виде строки
     * </pre>
     *
     * <code>required string ip_address = 3;</code>
     * @return Whether the ipAddress field is set.
     */
    boolean hasIpAddress();
    /**
     * <pre>
     * IPv4 или IPv6 адрес игрока в виде строки
     * </pre>
     *
     * <code>required string ip_address = 3;</code>
     * @return The ipAddress.
     */
    java.lang.String getIpAddress();
    /**
     * <pre>
     * IPv4 или IPv6 адрес игрока в виде строки
     * </pre>
     *
     * <code>required string ip_address = 3;</code>
     * @return The bytes for ipAddress.
     */
    com.google.protobuf.ByteString
        getIpAddressBytes();

    /**
     * <pre>
     * Порт UDP-сокета игрока
     * </pre>
     *
     * <code>required int32 port = 4;</code>
     * @return Whether the port field is set.
     */
    boolean hasPort();
    /**
     * <pre>
     * Порт UDP-сокета игрока
     * </pre>
     *
     * <code>required int32 port = 4;</code>
     * @return The port.
     */
    int getPort();
  }
  /**
   * <pre>
   * Игрок 
   * </pre>
   *
   * Protobuf type {@code snakes.GamePlayer}
   */
  public  static final class GamePlayer extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:snakes.GamePlayer)
      GamePlayerOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use GamePlayer.newBuilder() to construct.
    private GamePlayer(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GamePlayer() {
      name_ = "";
      ipAddress_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new GamePlayer();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private GamePlayer(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              name_ = bs;
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              id_ = input.readInt32();
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              ipAddress_ = bs;
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              port_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return nsu.manasyan.netsnake.out.SnakesProto.internal_static_snakes_GamePlayer_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return nsu.manasyan.netsnake.out.SnakesProto.internal_static_snakes_GamePlayer_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              nsu.manasyan.netsnake.out.SnakesProto.GamePlayer.class, nsu.manasyan.netsnake.out.SnakesProto.GamePlayer.Builder.class);
    }

    private int bitField0_;
    public static final int NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     * Имя игрока (для отображения в интерфейсе)
     * </pre>
     *
     * <code>required string name = 1;</code>
     * @return Whether the name field is set.
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Имя игрока (для отображения в интерфейсе)
     * </pre>
     *
     * <code>required string name = 1;</code>
     * @return The name.
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * Имя игрока (для отображения в интерфейсе)
     * </pre>
     *
     * <code>required string name = 1;</code>
     * @return The bytes for name.
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ID_FIELD_NUMBER = 2;
    private int id_;
    /**
     * <pre>
     * Уникальный идентификатор игрока в пределах игры
     * </pre>
     *
     * <code>required int32 id = 2;</code>
     * @return Whether the id field is set.
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Уникальный идентификатор игрока в пределах игры
     * </pre>
     *
     * <code>required int32 id = 2;</code>
     * @return The id.
     */
    public int getId() {
      return id_;
    }

    public static final int IP_ADDRESS_FIELD_NUMBER = 3;
    private volatile java.lang.Object ipAddress_;
    /**
     * <pre>
     * IPv4 или IPv6 адрес игрока в виде строки
     * </pre>
     *
     * <code>required string ip_address = 3;</code>
     * @return Whether the ipAddress field is set.
     */
    public boolean hasIpAddress() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * IPv4 или IPv6 адрес игрока в виде строки
     * </pre>
     *
     * <code>required string ip_address = 3;</code>
     * @return The ipAddress.
     */
    public java.lang.String getIpAddress() {
      java.lang.Object ref = ipAddress_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          ipAddress_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * IPv4 или IPv6 адрес игрока в виде строки
     * </pre>
     *
     * <code>required string ip_address = 3;</code>
     * @return The bytes for ipAddress.
     */
    public com.google.protobuf.ByteString
        getIpAddressBytes() {
      java.lang.Object ref = ipAddress_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        ipAddress_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PORT_FIELD_NUMBER = 4;
    private int port_;
    /**
     * <pre>
     * Порт UDP-сокета игрока
     * </pre>
     *
     * <code>required int32 port = 4;</code>
     * @return Whether the port field is set.
     */
    public boolean hasPort() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * Порт UDP-сокета игрока
     * </pre>
     *
     * <code>required int32 port = 4;</code>
     * @return The port.
     */
    public int getPort() {
      return port_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasIpAddress()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPort()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeInt32(2, id_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, ipAddress_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeInt32(4, port_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, id_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, ipAddress_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, port_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof nsu.manasyan.netsnake.out.SnakesProto.GamePlayer)) {
        return super.equals(obj);
      }
      nsu.manasyan.netsnake.out.SnakesProto.GamePlayer other = (nsu.manasyan.netsnake.out.SnakesProto.GamePlayer) obj;

      if (hasName() != other.hasName()) return false;
      if (hasName()) {
        if (!getName()
            .equals(other.getName())) return false;
      }
      if (hasId() != other.hasId()) return false;
      if (hasId()) {
        if (getId()
            != other.getId()) return false;
      }
      if (hasIpAddress() != other.hasIpAddress()) return false;
      if (hasIpAddress()) {
        if (!getIpAddress()
            .equals(other.getIpAddress())) return false;
      }
      if (hasPort() != other.hasPort()) return false;
      if (hasPort()) {
        if (getPort()
            != other.getPort()) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasName()) {
        hash = (37 * hash) + NAME_FIELD_NUMBER;
        hash = (53 * hash) + getName().hashCode();
      }
      if (hasId()) {
        hash = (37 * hash) + ID_FIELD_NUMBER;
        hash = (53 * hash) + getId();
      }
      if (hasIpAddress()) {
        hash = (37 * hash) + IP_ADDRESS_FIELD_NUMBER;
        hash = (53 * hash) + getIpAddress().hashCode();
      }
      if (hasPort()) {
        hash = (37 * hash) + PORT_FIELD_NUMBER;
        hash = (53 * hash) + getPort();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static nsu.manasyan.netsnake.out.SnakesProto.GamePlayer parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nsu.manasyan.netsnake.out.SnakesProto.GamePlayer parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nsu.manasyan.netsnake.out.SnakesProto.GamePlayer parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nsu.manasyan.netsnake.out.SnakesProto.GamePlayer parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nsu.manasyan.netsnake.out.SnakesProto.GamePlayer parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nsu.manasyan.netsnake.out.SnakesProto.GamePlayer parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nsu.manasyan.netsnake.out.SnakesProto.GamePlayer parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static nsu.manasyan.netsnake.out.SnakesProto.GamePlayer parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static nsu.manasyan.netsnake.out.SnakesProto.GamePlayer parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static nsu.manasyan.netsnake.out.SnakesProto.GamePlayer parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static nsu.manasyan.netsnake.out.SnakesProto.GamePlayer parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static nsu.manasyan.netsnake.out.SnakesProto.GamePlayer parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(nsu.manasyan.netsnake.out.SnakesProto.GamePlayer prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Игрок 
     * </pre>
     *
     * Protobuf type {@code snakes.GamePlayer}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:snakes.GamePlayer)
        nsu.manasyan.netsnake.out.SnakesProto.GamePlayerOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return nsu.manasyan.netsnake.out.SnakesProto.internal_static_snakes_GamePlayer_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return nsu.manasyan.netsnake.out.SnakesProto.internal_static_snakes_GamePlayer_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                nsu.manasyan.netsnake.out.SnakesProto.GamePlayer.class, nsu.manasyan.netsnake.out.SnakesProto.GamePlayer.Builder.class);
      }

      // Construct using nsu.manasyan.netsnake.out.SnakesProto.GamePlayer.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        ipAddress_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        port_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return nsu.manasyan.netsnake.out.SnakesProto.internal_static_snakes_GamePlayer_descriptor;
      }

      @java.lang.Override
      public nsu.manasyan.netsnake.out.SnakesProto.GamePlayer getDefaultInstanceForType() {
        return nsu.manasyan.netsnake.out.SnakesProto.GamePlayer.getDefaultInstance();
      }

      @java.lang.Override
      public nsu.manasyan.netsnake.out.SnakesProto.GamePlayer build() {
        nsu.manasyan.netsnake.out.SnakesProto.GamePlayer result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public nsu.manasyan.netsnake.out.SnakesProto.GamePlayer buildPartial() {
        nsu.manasyan.netsnake.out.SnakesProto.GamePlayer result = new nsu.manasyan.netsnake.out.SnakesProto.GamePlayer(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          to_bitField0_ |= 0x00000001;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.id_ = id_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          to_bitField0_ |= 0x00000004;
        }
        result.ipAddress_ = ipAddress_;
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.port_ = port_;
          to_bitField0_ |= 0x00000008;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof nsu.manasyan.netsnake.out.SnakesProto.GamePlayer) {
          return mergeFrom((nsu.manasyan.netsnake.out.SnakesProto.GamePlayer)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(nsu.manasyan.netsnake.out.SnakesProto.GamePlayer other) {
        if (other == nsu.manasyan.netsnake.out.SnakesProto.GamePlayer.getDefaultInstance()) return this;
        if (other.hasName()) {
          bitField0_ |= 0x00000001;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasIpAddress()) {
          bitField0_ |= 0x00000004;
          ipAddress_ = other.ipAddress_;
          onChanged();
        }
        if (other.hasPort()) {
          setPort(other.getPort());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasName()) {
          return false;
        }
        if (!hasId()) {
          return false;
        }
        if (!hasIpAddress()) {
          return false;
        }
        if (!hasPort()) {
          return false;
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        nsu.manasyan.netsnake.out.SnakesProto.GamePlayer parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (nsu.manasyan.netsnake.out.SnakesProto.GamePlayer) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * Имя игрока (для отображения в интерфейсе)
       * </pre>
       *
       * <code>required string name = 1;</code>
       * @return Whether the name field is set.
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Имя игрока (для отображения в интерфейсе)
       * </pre>
       *
       * <code>required string name = 1;</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Имя игрока (для отображения в интерфейсе)
       * </pre>
       *
       * <code>required string name = 1;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Имя игрока (для отображения в интерфейсе)
       * </pre>
       *
       * <code>required string name = 1;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Имя игрока (для отображения в интерфейсе)
       * </pre>
       *
       * <code>required string name = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Имя игрока (для отображения в интерфейсе)
       * </pre>
       *
       * <code>required string name = 1;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }

      private int id_ ;
      /**
       * <pre>
       * Уникальный идентификатор игрока в пределах игры
       * </pre>
       *
       * <code>required int32 id = 2;</code>
       * @return Whether the id field is set.
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * Уникальный идентификатор игрока в пределах игры
       * </pre>
       *
       * <code>required int32 id = 2;</code>
       * @return The id.
       */
      public int getId() {
        return id_;
      }
      /**
       * <pre>
       * Уникальный идентификатор игрока в пределах игры
       * </pre>
       *
       * <code>required int32 id = 2;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000002;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Уникальный идентификатор игрока в пределах игры
       * </pre>
       *
       * <code>required int32 id = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        id_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object ipAddress_ = "";
      /**
       * <pre>
       * IPv4 или IPv6 адрес игрока в виде строки
       * </pre>
       *
       * <code>required string ip_address = 3;</code>
       * @return Whether the ipAddress field is set.
       */
      public boolean hasIpAddress() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * IPv4 или IPv6 адрес игрока в виде строки
       * </pre>
       *
       * <code>required string ip_address = 3;</code>
       * @return The ipAddress.
       */
      public java.lang.String getIpAddress() {
        java.lang.Object ref = ipAddress_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            ipAddress_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * IPv4 или IPv6 адрес игрока в виде строки
       * </pre>
       *
       * <code>required string ip_address = 3;</code>
       * @return The bytes for ipAddress.
       */
      public com.google.protobuf.ByteString
          getIpAddressBytes() {
        java.lang.Object ref = ipAddress_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          ipAddress_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * IPv4 или IPv6 адрес игрока в виде строки
       * </pre>
       *
       * <code>required string ip_address = 3;</code>
       * @param value The ipAddress to set.
       * @return This builder for chaining.
       */
      public Builder setIpAddress(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        ipAddress_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * IPv4 или IPv6 адрес игрока в виде строки
       * </pre>
       *
       * <code>required string ip_address = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearIpAddress() {
        bitField0_ = (bitField0_ & ~0x00000004);
        ipAddress_ = getDefaultInstance().getIpAddress();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * IPv4 или IPv6 адрес игрока в виде строки
       * </pre>
       *
       * <code>required string ip_address = 3;</code>
       * @param value The bytes for ipAddress to set.
       * @return This builder for chaining.
       */
      public Builder setIpAddressBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        ipAddress_ = value;
        onChanged();
        return this;
      }

      private int port_ ;
      /**
       * <pre>
       * Порт UDP-сокета игрока
       * </pre>
       *
       * <code>required int32 port = 4;</code>
       * @return Whether the port field is set.
       */
      public boolean hasPort() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * Порт UDP-сокета игрока
       * </pre>
       *
       * <code>required int32 port = 4;</code>
       * @return The port.
       */
      public int getPort() {
        return port_;
      }
      /**
       * <pre>
       * Порт UDP-сокета игрока
       * </pre>
       *
       * <code>required int32 port = 4;</code>
       * @param value The port to set.
       * @return This builder for chaining.
       */
      public Builder setPort(int value) {
        bitField0_ |= 0x00000008;
        port_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Порт UDP-сокета игрока
       * </pre>
       *
       * <code>required int32 port = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearPort() {
        bitField0_ = (bitField0_ & ~0x00000008);
        port_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:snakes.GamePlayer)
    }

    // @@protoc_insertion_point(class_scope:snakes.GamePlayer)
    private static final nsu.manasyan.netsnake.out.SnakesProto.GamePlayer DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new nsu.manasyan.netsnake.out.SnakesProto.GamePlayer();
    }

    public static nsu.manasyan.netsnake.out.SnakesProto.GamePlayer getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<GamePlayer>
        PARSER = new com.google.protobuf.AbstractParser<GamePlayer>() {
      @java.lang.Override
      public GamePlayer parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GamePlayer(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<GamePlayer> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GamePlayer> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public nsu.manasyan.netsnake.out.SnakesProto.GamePlayer getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface GameConfigOrBuilder extends
      // @@protoc_insertion_point(interface_extends:snakes.GameConfig)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Ширина поля в клетках (от 10 до 100)
     * </pre>
     *
     * <code>optional int32 width = 1 [default = 40];</code>
     * @return Whether the width field is set.
     */
    boolean hasWidth();
    /**
     * <pre>
     * Ширина поля в клетках (от 10 до 100)
     * </pre>
     *
     * <code>optional int32 width = 1 [default = 40];</code>
     * @return The width.
     */
    int getWidth();

    /**
     * <pre>
     * Высота поля в клетках (от 10 до 100)
     * </pre>
     *
     * <code>optional int32 height = 2 [default = 30];</code>
     * @return Whether the height field is set.
     */
    boolean hasHeight();
    /**
     * <pre>
     * Высота поля в клетках (от 10 до 100)
     * </pre>
     *
     * <code>optional int32 height = 2 [default = 30];</code>
     * @return The height.
     */
    int getHeight();

    /**
     * <pre>
     * Количество клеток с едой, независимо от числа игроков (от 0 до 100)
     * </pre>
     *
     * <code>optional int32 food_static = 3 [default = 1];</code>
     * @return Whether the foodStatic field is set.
     */
    boolean hasFoodStatic();
    /**
     * <pre>
     * Количество клеток с едой, независимо от числа игроков (от 0 до 100)
     * </pre>
     *
     * <code>optional int32 food_static = 3 [default = 1];</code>
     * @return The foodStatic.
     */
    int getFoodStatic();

    /**
     * <pre>
     * Количество клеток с едой, на каждого игрока (вещественный коэффициент от 0 до 100)
     * </pre>
     *
     * <code>optional float food_per_player = 4 [default = 1];</code>
     * @return Whether the foodPerPlayer field is set.
     */
    boolean hasFoodPerPlayer();
    /**
     * <pre>
     * Количество клеток с едой, на каждого игрока (вещественный коэффициент от 0 до 100)
     * </pre>
     *
     * <code>optional float food_per_player = 4 [default = 1];</code>
     * @return The foodPerPlayer.
     */
    float getFoodPerPlayer();

    /**
     * <pre>
     * Задержка между ходами (сменой состояний) в игре, в миллисекундах
     * </pre>
     *
     * <code>optional int32 delay_ms = 5 [default = 1000];</code>
     * @return Whether the delayMs field is set.
     */
    boolean hasDelayMs();
    /**
     * <pre>
     * Задержка между ходами (сменой состояний) в игре, в миллисекундах
     * </pre>
     *
     * <code>optional int32 delay_ms = 5 [default = 1000];</code>
     * @return The delayMs.
     */
    int getDelayMs();

    /**
     * <pre>
     * Вероятность превращения мёртвой клетки в еду (от 0 до 1).
     * </pre>
     *
     * <code>optional float dead_food_prob = 6 [default = 0.1];</code>
     * @return Whether the deadFoodProb field is set.
     */
    boolean hasDeadFoodProb();
    /**
     * <pre>
     * Вероятность превращения мёртвой клетки в еду (от 0 до 1).
     * </pre>
     *
     * <code>optional float dead_food_prob = 6 [default = 0.1];</code>
     * @return The deadFoodProb.
     */
    float getDeadFoodProb();
  }
  /**
   * <pre>
   * Параметры идущей игры (не должны меняться в процессе игры) 
   * </pre>
   *
   * Protobuf type {@code snakes.GameConfig}
   */
  public  static final class GameConfig extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:snakes.GameConfig)
      GameConfigOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use GameConfig.newBuilder() to construct.
    private GameConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GameConfig() {
      width_ = 40;
      height_ = 30;
      foodStatic_ = 1;
      foodPerPlayer_ = 1F;
      delayMs_ = 1000;
      deadFoodProb_ = 0.1F;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new GameConfig();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private GameConfig(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              bitField0_ |= 0x00000001;
              width_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              height_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              foodStatic_ = input.readInt32();
              break;
            }
            case 37: {
              bitField0_ |= 0x00000008;
              foodPerPlayer_ = input.readFloat();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              delayMs_ = input.readInt32();
              break;
            }
            case 53: {
              bitField0_ |= 0x00000020;
              deadFoodProb_ = input.readFloat();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return nsu.manasyan.netsnake.out.SnakesProto.internal_static_snakes_GameConfig_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return nsu.manasyan.netsnake.out.SnakesProto.internal_static_snakes_GameConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              nsu.manasyan.netsnake.out.SnakesProto.GameConfig.class, nsu.manasyan.netsnake.out.SnakesProto.GameConfig.Builder.class);
    }

    private int bitField0_;
    public static final int WIDTH_FIELD_NUMBER = 1;
    private int width_;
    /**
     * <pre>
     * Ширина поля в клетках (от 10 до 100)
     * </pre>
     *
     * <code>optional int32 width = 1 [default = 40];</code>
     * @return Whether the width field is set.
     */
    public boolean hasWidth() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Ширина поля в клетках (от 10 до 100)
     * </pre>
     *
     * <code>optional int32 width = 1 [default = 40];</code>
     * @return The width.
     */
    public int getWidth() {
      return width_;
    }

    public static final int HEIGHT_FIELD_NUMBER = 2;
    private int height_;
    /**
     * <pre>
     * Высота поля в клетках (от 10 до 100)
     * </pre>
     *
     * <code>optional int32 height = 2 [default = 30];</code>
     * @return Whether the height field is set.
     */
    public boolean hasHeight() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Высота поля в клетках (от 10 до 100)
     * </pre>
     *
     * <code>optional int32 height = 2 [default = 30];</code>
     * @return The height.
     */
    public int getHeight() {
      return height_;
    }

    public static final int FOOD_STATIC_FIELD_NUMBER = 3;
    private int foodStatic_;
    /**
     * <pre>
     * Количество клеток с едой, независимо от числа игроков (от 0 до 100)
     * </pre>
     *
     * <code>optional int32 food_static = 3 [default = 1];</code>
     * @return Whether the foodStatic field is set.
     */
    public boolean hasFoodStatic() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * Количество клеток с едой, независимо от числа игроков (от 0 до 100)
     * </pre>
     *
     * <code>optional int32 food_static = 3 [default = 1];</code>
     * @return The foodStatic.
     */
    public int getFoodStatic() {
      return foodStatic_;
    }

    public static final int FOOD_PER_PLAYER_FIELD_NUMBER = 4;
    private float foodPerPlayer_;
    /**
     * <pre>
     * Количество клеток с едой, на каждого игрока (вещественный коэффициент от 0 до 100)
     * </pre>
     *
     * <code>optional float food_per_player = 4 [default = 1];</code>
     * @return Whether the foodPerPlayer field is set.
     */
    public boolean hasFoodPerPlayer() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * Количество клеток с едой, на каждого игрока (вещественный коэффициент от 0 до 100)
     * </pre>
     *
     * <code>optional float food_per_player = 4 [default = 1];</code>
     * @return The foodPerPlayer.
     */
    public float getFoodPerPlayer() {
      return foodPerPlayer_;
    }

    public static final int DELAY_MS_FIELD_NUMBER = 5;
    private int delayMs_;
    /**
     * <pre>
     * Задержка между ходами (сменой состояний) в игре, в миллисекундах
     * </pre>
     *
     * <code>optional int32 delay_ms = 5 [default = 1000];</code>
     * @return Whether the delayMs field is set.
     */
    public boolean hasDelayMs() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * Задержка между ходами (сменой состояний) в игре, в миллисекундах
     * </pre>
     *
     * <code>optional int32 delay_ms = 5 [default = 1000];</code>
     * @return The delayMs.
     */
    public int getDelayMs() {
      return delayMs_;
    }

    public static final int DEAD_FOOD_PROB_FIELD_NUMBER = 6;
    private float deadFoodProb_;
    /**
     * <pre>
     * Вероятность превращения мёртвой клетки в еду (от 0 до 1).
     * </pre>
     *
     * <code>optional float dead_food_prob = 6 [default = 0.1];</code>
     * @return Whether the deadFoodProb field is set.
     */
    public boolean hasDeadFoodProb() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     * Вероятность превращения мёртвой клетки в еду (от 0 до 1).
     * </pre>
     *
     * <code>optional float dead_food_prob = 6 [default = 0.1];</code>
     * @return The deadFoodProb.
     */
    public float getDeadFoodProb() {
      return deadFoodProb_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeInt32(1, width_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeInt32(2, height_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeInt32(3, foodStatic_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeFloat(4, foodPerPlayer_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeInt32(5, delayMs_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        output.writeFloat(6, deadFoodProb_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, width_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, height_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, foodStatic_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, foodPerPlayer_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, delayMs_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(6, deadFoodProb_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof nsu.manasyan.netsnake.out.SnakesProto.GameConfig)) {
        return super.equals(obj);
      }
      nsu.manasyan.netsnake.out.SnakesProto.GameConfig other = (nsu.manasyan.netsnake.out.SnakesProto.GameConfig) obj;

      if (hasWidth() != other.hasWidth()) return false;
      if (hasWidth()) {
        if (getWidth()
            != other.getWidth()) return false;
      }
      if (hasHeight() != other.hasHeight()) return false;
      if (hasHeight()) {
        if (getHeight()
            != other.getHeight()) return false;
      }
      if (hasFoodStatic() != other.hasFoodStatic()) return false;
      if (hasFoodStatic()) {
        if (getFoodStatic()
            != other.getFoodStatic()) return false;
      }
      if (hasFoodPerPlayer() != other.hasFoodPerPlayer()) return false;
      if (hasFoodPerPlayer()) {
        if (java.lang.Float.floatToIntBits(getFoodPerPlayer())
            != java.lang.Float.floatToIntBits(
                other.getFoodPerPlayer())) return false;
      }
      if (hasDelayMs() != other.hasDelayMs()) return false;
      if (hasDelayMs()) {
        if (getDelayMs()
            != other.getDelayMs()) return false;
      }
      if (hasDeadFoodProb() != other.hasDeadFoodProb()) return false;
      if (hasDeadFoodProb()) {
        if (java.lang.Float.floatToIntBits(getDeadFoodProb())
            != java.lang.Float.floatToIntBits(
                other.getDeadFoodProb())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasWidth()) {
        hash = (37 * hash) + WIDTH_FIELD_NUMBER;
        hash = (53 * hash) + getWidth();
      }
      if (hasHeight()) {
        hash = (37 * hash) + HEIGHT_FIELD_NUMBER;
        hash = (53 * hash) + getHeight();
      }
      if (hasFoodStatic()) {
        hash = (37 * hash) + FOOD_STATIC_FIELD_NUMBER;
        hash = (53 * hash) + getFoodStatic();
      }
      if (hasFoodPerPlayer()) {
        hash = (37 * hash) + FOOD_PER_PLAYER_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getFoodPerPlayer());
      }
      if (hasDelayMs()) {
        hash = (37 * hash) + DELAY_MS_FIELD_NUMBER;
        hash = (53 * hash) + getDelayMs();
      }
      if (hasDeadFoodProb()) {
        hash = (37 * hash) + DEAD_FOOD_PROB_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getDeadFoodProb());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static nsu.manasyan.netsnake.out.SnakesProto.GameConfig parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nsu.manasyan.netsnake.out.SnakesProto.GameConfig parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nsu.manasyan.netsnake.out.SnakesProto.GameConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nsu.manasyan.netsnake.out.SnakesProto.GameConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nsu.manasyan.netsnake.out.SnakesProto.GameConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nsu.manasyan.netsnake.out.SnakesProto.GameConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nsu.manasyan.netsnake.out.SnakesProto.GameConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static nsu.manasyan.netsnake.out.SnakesProto.GameConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static nsu.manasyan.netsnake.out.SnakesProto.GameConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static nsu.manasyan.netsnake.out.SnakesProto.GameConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static nsu.manasyan.netsnake.out.SnakesProto.GameConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static nsu.manasyan.netsnake.out.SnakesProto.GameConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(nsu.manasyan.netsnake.out.SnakesProto.GameConfig prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Параметры идущей игры (не должны меняться в процессе игры) 
     * </pre>
     *
     * Protobuf type {@code snakes.GameConfig}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:snakes.GameConfig)
        nsu.manasyan.netsnake.out.SnakesProto.GameConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return nsu.manasyan.netsnake.out.SnakesProto.internal_static_snakes_GameConfig_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return nsu.manasyan.netsnake.out.SnakesProto.internal_static_snakes_GameConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                nsu.manasyan.netsnake.out.SnakesProto.GameConfig.class, nsu.manasyan.netsnake.out.SnakesProto.GameConfig.Builder.class);
      }

      // Construct using nsu.manasyan.netsnake.out.SnakesProto.GameConfig.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        width_ = 40;
        bitField0_ = (bitField0_ & ~0x00000001);
        height_ = 30;
        bitField0_ = (bitField0_ & ~0x00000002);
        foodStatic_ = 1;
        bitField0_ = (bitField0_ & ~0x00000004);
        foodPerPlayer_ = 1F;
        bitField0_ = (bitField0_ & ~0x00000008);
        delayMs_ = 1000;
        bitField0_ = (bitField0_ & ~0x00000010);
        deadFoodProb_ = 0.1F;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return nsu.manasyan.netsnake.out.SnakesProto.internal_static_snakes_GameConfig_descriptor;
      }

      @java.lang.Override
      public nsu.manasyan.netsnake.out.SnakesProto.GameConfig getDefaultInstanceForType() {
        return nsu.manasyan.netsnake.out.SnakesProto.GameConfig.getDefaultInstance();
      }

      @java.lang.Override
      public nsu.manasyan.netsnake.out.SnakesProto.GameConfig build() {
        nsu.manasyan.netsnake.out.SnakesProto.GameConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public nsu.manasyan.netsnake.out.SnakesProto.GameConfig buildPartial() {
        nsu.manasyan.netsnake.out.SnakesProto.GameConfig result = new nsu.manasyan.netsnake.out.SnakesProto.GameConfig(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          to_bitField0_ |= 0x00000001;
        }
        result.width_ = width_;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          to_bitField0_ |= 0x00000002;
        }
        result.height_ = height_;
        if (((from_bitField0_ & 0x00000004) != 0)) {
          to_bitField0_ |= 0x00000004;
        }
        result.foodStatic_ = foodStatic_;
        if (((from_bitField0_ & 0x00000008) != 0)) {
          to_bitField0_ |= 0x00000008;
        }
        result.foodPerPlayer_ = foodPerPlayer_;
        if (((from_bitField0_ & 0x00000010) != 0)) {
          to_bitField0_ |= 0x00000010;
        }
        result.delayMs_ = delayMs_;
        if (((from_bitField0_ & 0x00000020) != 0)) {
          to_bitField0_ |= 0x00000020;
        }
        result.deadFoodProb_ = deadFoodProb_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof nsu.manasyan.netsnake.out.SnakesProto.GameConfig) {
          return mergeFrom((nsu.manasyan.netsnake.out.SnakesProto.GameConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(nsu.manasyan.netsnake.out.SnakesProto.GameConfig other) {
        if (other == nsu.manasyan.netsnake.out.SnakesProto.GameConfig.getDefaultInstance()) return this;
        if (other.hasWidth()) {
          setWidth(other.getWidth());
        }
        if (other.hasHeight()) {
          setHeight(other.getHeight());
        }
        if (other.hasFoodStatic()) {
          setFoodStatic(other.getFoodStatic());
        }
        if (other.hasFoodPerPlayer()) {
          setFoodPerPlayer(other.getFoodPerPlayer());
        }
        if (other.hasDelayMs()) {
          setDelayMs(other.getDelayMs());
        }
        if (other.hasDeadFoodProb()) {
          setDeadFoodProb(other.getDeadFoodProb());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        nsu.manasyan.netsnake.out.SnakesProto.GameConfig parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (nsu.manasyan.netsnake.out.SnakesProto.GameConfig) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int width_ = 40;
      /**
       * <pre>
       * Ширина поля в клетках (от 10 до 100)
       * </pre>
       *
       * <code>optional int32 width = 1 [default = 40];</code>
       * @return Whether the width field is set.
       */
      public boolean hasWidth() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Ширина поля в клетках (от 10 до 100)
       * </pre>
       *
       * <code>optional int32 width = 1 [default = 40];</code>
       * @return The width.
       */
      public int getWidth() {
        return width_;
      }
      /**
       * <pre>
       * Ширина поля в клетках (от 10 до 100)
       * </pre>
       *
       * <code>optional int32 width = 1 [default = 40];</code>
       * @param value The width to set.
       * @return This builder for chaining.
       */
      public Builder setWidth(int value) {
        bitField0_ |= 0x00000001;
        width_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Ширина поля в клетках (от 10 до 100)
       * </pre>
       *
       * <code>optional int32 width = 1 [default = 40];</code>
       * @return This builder for chaining.
       */
      public Builder clearWidth() {
        bitField0_ = (bitField0_ & ~0x00000001);
        width_ = 40;
        onChanged();
        return this;
      }

      private int height_ = 30;
      /**
       * <pre>
       * Высота поля в клетках (от 10 до 100)
       * </pre>
       *
       * <code>optional int32 height = 2 [default = 30];</code>
       * @return Whether the height field is set.
       */
      public boolean hasHeight() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * Высота поля в клетках (от 10 до 100)
       * </pre>
       *
       * <code>optional int32 height = 2 [default = 30];</code>
       * @return The height.
       */
      public int getHeight() {
        return height_;
      }
      /**
       * <pre>
       * Высота поля в клетках (от 10 до 100)
       * </pre>
       *
       * <code>optional int32 height = 2 [default = 30];</code>
       * @param value The height to set.
       * @return This builder for chaining.
       */
      public Builder setHeight(int value) {
        bitField0_ |= 0x00000002;
        height_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Высота поля в клетках (от 10 до 100)
       * </pre>
       *
       * <code>optional int32 height = 2 [default = 30];</code>
       * @return This builder for chaining.
       */
      public Builder clearHeight() {
        bitField0_ = (bitField0_ & ~0x00000002);
        height_ = 30;
        onChanged();
        return this;
      }

      private int foodStatic_ = 1;
      /**
       * <pre>
       * Количество клеток с едой, независимо от числа игроков (от 0 до 100)
       * </pre>
       *
       * <code>optional int32 food_static = 3 [default = 1];</code>
       * @return Whether the foodStatic field is set.
       */
      public boolean hasFoodStatic() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * Количество клеток с едой, независимо от числа игроков (от 0 до 100)
       * </pre>
       *
       * <code>optional int32 food_static = 3 [default = 1];</code>
       * @return The foodStatic.
       */
      public int getFoodStatic() {
        return foodStatic_;
      }
      /**
       * <pre>
       * Количество клеток с едой, независимо от числа игроков (от 0 до 100)
       * </pre>
       *
       * <code>optional int32 food_static = 3 [default = 1];</code>
       * @param value The foodStatic to set.
       * @return This builder for chaining.
       */
      public Builder setFoodStatic(int value) {
        bitField0_ |= 0x00000004;
        foodStatic_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Количество клеток с едой, независимо от числа игроков (от 0 до 100)
       * </pre>
       *
       * <code>optional int32 food_static = 3 [default = 1];</code>
       * @return This builder for chaining.
       */
      public Builder clearFoodStatic() {
        bitField0_ = (bitField0_ & ~0x00000004);
        foodStatic_ = 1;
        onChanged();
        return this;
      }

      private float foodPerPlayer_ = 1F;
      /**
       * <pre>
       * Количество клеток с едой, на каждого игрока (вещественный коэффициент от 0 до 100)
       * </pre>
       *
       * <code>optional float food_per_player = 4 [default = 1];</code>
       * @return Whether the foodPerPlayer field is set.
       */
      public boolean hasFoodPerPlayer() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * Количество клеток с едой, на каждого игрока (вещественный коэффициент от 0 до 100)
       * </pre>
       *
       * <code>optional float food_per_player = 4 [default = 1];</code>
       * @return The foodPerPlayer.
       */
      public float getFoodPerPlayer() {
        return foodPerPlayer_;
      }
      /**
       * <pre>
       * Количество клеток с едой, на каждого игрока (вещественный коэффициент от 0 до 100)
       * </pre>
       *
       * <code>optional float food_per_player = 4 [default = 1];</code>
       * @param value The foodPerPlayer to set.
       * @return This builder for chaining.
       */
      public Builder setFoodPerPlayer(float value) {
        bitField0_ |= 0x00000008;
        foodPerPlayer_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Количество клеток с едой, на каждого игрока (вещественный коэффициент от 0 до 100)
       * </pre>
       *
       * <code>optional float food_per_player = 4 [default = 1];</code>
       * @return This builder for chaining.
       */
      public Builder clearFoodPerPlayer() {
        bitField0_ = (bitField0_ & ~0x00000008);
        foodPerPlayer_ = 1F;
        onChanged();
        return this;
      }

      private int delayMs_ = 1000;
      /**
       * <pre>
       * Задержка между ходами (сменой состояний) в игре, в миллисекундах
       * </pre>
       *
       * <code>optional int32 delay_ms = 5 [default = 1000];</code>
       * @return Whether the delayMs field is set.
       */
      public boolean hasDelayMs() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <pre>
       * Задержка между ходами (сменой состояний) в игре, в миллисекундах
       * </pre>
       *
       * <code>optional int32 delay_ms = 5 [default = 1000];</code>
       * @return The delayMs.
       */
      public int getDelayMs() {
        return delayMs_;
      }
      /**
       * <pre>
       * Задержка между ходами (сменой состояний) в игре, в миллисекундах
       * </pre>
       *
       * <code>optional int32 delay_ms = 5 [default = 1000];</code>
       * @param value The delayMs to set.
       * @return This builder for chaining.
       */
      public Builder setDelayMs(int value) {
        bitField0_ |= 0x00000010;
        delayMs_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Задержка между ходами (сменой состояний) в игре, в миллисекундах
       * </pre>
       *
       * <code>optional int32 delay_ms = 5 [default = 1000];</code>
       * @return This builder for chaining.
       */
      public Builder clearDelayMs() {
        bitField0_ = (bitField0_ & ~0x00000010);
        delayMs_ = 1000;
        onChanged();
        return this;
      }

      private float deadFoodProb_ = 0.1F;
      /**
       * <pre>
       * Вероятность превращения мёртвой клетки в еду (от 0 до 1).
       * </pre>
       *
       * <code>optional float dead_food_prob = 6 [default = 0.1];</code>
       * @return Whether the deadFoodProb field is set.
       */
      public boolean hasDeadFoodProb() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <pre>
       * Вероятность превращения мёртвой клетки в еду (от 0 до 1).
       * </pre>
       *
       * <code>optional float dead_food_prob = 6 [default = 0.1];</code>
       * @return The deadFoodProb.
       */
      public float getDeadFoodProb() {
        return deadFoodProb_;
      }
      /**
       * <pre>
       * Вероятность превращения мёртвой клетки в еду (от 0 до 1).
       * </pre>
       *
       * <code>optional float dead_food_prob = 6 [default = 0.1];</code>
       * @param value The deadFoodProb to set.
       * @return This builder for chaining.
       */
      public Builder setDeadFoodProb(float value) {
        bitField0_ |= 0x00000020;
        deadFoodProb_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Вероятность превращения мёртвой клетки в еду (от 0 до 1).
       * </pre>
       *
       * <code>optional float dead_food_prob = 6 [default = 0.1];</code>
       * @return This builder for chaining.
       */
      public Builder clearDeadFoodProb() {
        bitField0_ = (bitField0_ & ~0x00000020);
        deadFoodProb_ = 0.1F;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:snakes.GameConfig)
    }

    // @@protoc_insertion_point(class_scope:snakes.GameConfig)
    private static final nsu.manasyan.netsnake.out.SnakesProto.GameConfig DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new nsu.manasyan.netsnake.out.SnakesProto.GameConfig();
    }

    public static nsu.manasyan.netsnake.out.SnakesProto.GameConfig getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<GameConfig>
        PARSER = new com.google.protobuf.AbstractParser<GameConfig>() {
      @java.lang.Override
      public GameConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GameConfig(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<GameConfig> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GameConfig> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public nsu.manasyan.netsnake.out.SnakesProto.GameConfig getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface GamePlayersOrBuilder extends
      // @@protoc_insertion_point(interface_extends:snakes.GamePlayers)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * "Главный" игрок, центр топологии "звезда"
     * </pre>
     *
     * <code>required .snakes.GamePlayer master = 1;</code>
     * @return Whether the master field is set.
     */
    boolean hasMaster();
    /**
     * <pre>
     * "Главный" игрок, центр топологии "звезда"
     * </pre>
     *
     * <code>required .snakes.GamePlayer master = 1;</code>
     * @return The master.
     */
    nsu.manasyan.netsnake.out.SnakesProto.GamePlayer getMaster();
    /**
     * <pre>
     * "Главный" игрок, центр топологии "звезда"
     * </pre>
     *
     * <code>required .snakes.GamePlayer master = 1;</code>
     */
    nsu.manasyan.netsnake.out.SnakesProto.GamePlayerOrBuilder getMasterOrBuilder();

    /**
     * <pre>
     * Список остальных игроков. "Заместителем" главного является игрок с минимальным id
     * </pre>
     *
     * <code>repeated .snakes.GamePlayer others = 2;</code>
     */
    java.util.List<nsu.manasyan.netsnake.out.SnakesProto.GamePlayer> 
        getOthersList();
    /**
     * <pre>
     * Список остальных игроков. "Заместителем" главного является игрок с минимальным id
     * </pre>
     *
     * <code>repeated .snakes.GamePlayer others = 2;</code>
     */
    nsu.manasyan.netsnake.out.SnakesProto.GamePlayer getOthers(int index);
    /**
     * <pre>
     * Список остальных игроков. "Заместителем" главного является игрок с минимальным id
     * </pre>
     *
     * <code>repeated .snakes.GamePlayer others = 2;</code>
     */
    int getOthersCount();
    /**
     * <pre>
     * Список остальных игроков. "Заместителем" главного является игрок с минимальным id
     * </pre>
     *
     * <code>repeated .snakes.GamePlayer others = 2;</code>
     */
    java.util.List<? extends nsu.manasyan.netsnake.out.SnakesProto.GamePlayerOrBuilder> 
        getOthersOrBuilderList();
    /**
     * <pre>
     * Список остальных игроков. "Заместителем" главного является игрок с минимальным id
     * </pre>
     *
     * <code>repeated .snakes.GamePlayer others = 2;</code>
     */
    nsu.manasyan.netsnake.out.SnakesProto.GamePlayerOrBuilder getOthersOrBuilder(
        int index);
  }
  /**
   * <pre>
   * Игроки конкретной игры 
   * </pre>
   *
   * Protobuf type {@code snakes.GamePlayers}
   */
  public  static final class GamePlayers extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:snakes.GamePlayers)
      GamePlayersOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use GamePlayers.newBuilder() to construct.
    private GamePlayers(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GamePlayers() {
      others_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new GamePlayers();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private GamePlayers(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              nsu.manasyan.netsnake.out.SnakesProto.GamePlayer.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) != 0)) {
                subBuilder = master_.toBuilder();
              }
              master_ = input.readMessage(nsu.manasyan.netsnake.out.SnakesProto.GamePlayer.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(master_);
                master_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                others_ = new java.util.ArrayList<nsu.manasyan.netsnake.out.SnakesProto.GamePlayer>();
                mutable_bitField0_ |= 0x00000002;
              }
              others_.add(
                  input.readMessage(nsu.manasyan.netsnake.out.SnakesProto.GamePlayer.PARSER, extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          others_ = java.util.Collections.unmodifiableList(others_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return nsu.manasyan.netsnake.out.SnakesProto.internal_static_snakes_GamePlayers_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return nsu.manasyan.netsnake.out.SnakesProto.internal_static_snakes_GamePlayers_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              nsu.manasyan.netsnake.out.SnakesProto.GamePlayers.class, nsu.manasyan.netsnake.out.SnakesProto.GamePlayers.Builder.class);
    }

    private int bitField0_;
    public static final int MASTER_FIELD_NUMBER = 1;
    private nsu.manasyan.netsnake.out.SnakesProto.GamePlayer master_;
    /**
     * <pre>
     * "Главный" игрок, центр топологии "звезда"
     * </pre>
     *
     * <code>required .snakes.GamePlayer master = 1;</code>
     * @return Whether the master field is set.
     */
    public boolean hasMaster() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * "Главный" игрок, центр топологии "звезда"
     * </pre>
     *
     * <code>required .snakes.GamePlayer master = 1;</code>
     * @return The master.
     */
    public nsu.manasyan.netsnake.out.SnakesProto.GamePlayer getMaster() {
      return master_ == null ? nsu.manasyan.netsnake.out.SnakesProto.GamePlayer.getDefaultInstance() : master_;
    }
    /**
     * <pre>
     * "Главный" игрок, центр топологии "звезда"
     * </pre>
     *
     * <code>required .snakes.GamePlayer master = 1;</code>
     */
    public nsu.manasyan.netsnake.out.SnakesProto.GamePlayerOrBuilder getMasterOrBuilder() {
      return master_ == null ? nsu.manasyan.netsnake.out.SnakesProto.GamePlayer.getDefaultInstance() : master_;
    }

    public static final int OTHERS_FIELD_NUMBER = 2;
    private java.util.List<nsu.manasyan.netsnake.out.SnakesProto.GamePlayer> others_;
    /**
     * <pre>
     * Список остальных игроков. "Заместителем" главного является игрок с минимальным id
     * </pre>
     *
     * <code>repeated .snakes.GamePlayer others = 2;</code>
     */
    public java.util.List<nsu.manasyan.netsnake.out.SnakesProto.GamePlayer> getOthersList() {
      return others_;
    }
    /**
     * <pre>
     * Список остальных игроков. "Заместителем" главного является игрок с минимальным id
     * </pre>
     *
     * <code>repeated .snakes.GamePlayer others = 2;</code>
     */
    public java.util.List<? extends nsu.manasyan.netsnake.out.SnakesProto.GamePlayerOrBuilder> 
        getOthersOrBuilderList() {
      return others_;
    }
    /**
     * <pre>
     * Список остальных игроков. "Заместителем" главного является игрок с минимальным id
     * </pre>
     *
     * <code>repeated .snakes.GamePlayer others = 2;</code>
     */
    public int getOthersCount() {
      return others_.size();
    }
    /**
     * <pre>
     * Список остальных игроков. "Заместителем" главного является игрок с минимальным id
     * </pre>
     *
     * <code>repeated .snakes.GamePlayer others = 2;</code>
     */
    public nsu.manasyan.netsnake.out.SnakesProto.GamePlayer getOthers(int index) {
      return others_.get(index);
    }
    /**
     * <pre>
     * Список остальных игроков. "Заместителем" главного является игрок с минимальным id
     * </pre>
     *
     * <code>repeated .snakes.GamePlayer others = 2;</code>
     */
    public nsu.manasyan.netsnake.out.SnakesProto.GamePlayerOrBuilder getOthersOrBuilder(
        int index) {
      return others_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasMaster()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getMaster().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getOthersCount(); i++) {
        if (!getOthers(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(1, getMaster());
      }
      for (int i = 0; i < others_.size(); i++) {
        output.writeMessage(2, others_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getMaster());
      }
      for (int i = 0; i < others_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, others_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof nsu.manasyan.netsnake.out.SnakesProto.GamePlayers)) {
        return super.equals(obj);
      }
      nsu.manasyan.netsnake.out.SnakesProto.GamePlayers other = (nsu.manasyan.netsnake.out.SnakesProto.GamePlayers) obj;

      if (hasMaster() != other.hasMaster()) return false;
      if (hasMaster()) {
        if (!getMaster()
            .equals(other.getMaster())) return false;
      }
      if (!getOthersList()
          .equals(other.getOthersList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasMaster()) {
        hash = (37 * hash) + MASTER_FIELD_NUMBER;
        hash = (53 * hash) + getMaster().hashCode();
      }
      if (getOthersCount() > 0) {
        hash = (37 * hash) + OTHERS_FIELD_NUMBER;
        hash = (53 * hash) + getOthersList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static nsu.manasyan.netsnake.out.SnakesProto.GamePlayers parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nsu.manasyan.netsnake.out.SnakesProto.GamePlayers parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nsu.manasyan.netsnake.out.SnakesProto.GamePlayers parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nsu.manasyan.netsnake.out.SnakesProto.GamePlayers parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nsu.manasyan.netsnake.out.SnakesProto.GamePlayers parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nsu.manasyan.netsnake.out.SnakesProto.GamePlayers parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nsu.manasyan.netsnake.out.SnakesProto.GamePlayers parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static nsu.manasyan.netsnake.out.SnakesProto.GamePlayers parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static nsu.manasyan.netsnake.out.SnakesProto.GamePlayers parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static nsu.manasyan.netsnake.out.SnakesProto.GamePlayers parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static nsu.manasyan.netsnake.out.SnakesProto.GamePlayers parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static nsu.manasyan.netsnake.out.SnakesProto.GamePlayers parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(nsu.manasyan.netsnake.out.SnakesProto.GamePlayers prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Игроки конкретной игры 
     * </pre>
     *
     * Protobuf type {@code snakes.GamePlayers}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:snakes.GamePlayers)
        nsu.manasyan.netsnake.out.SnakesProto.GamePlayersOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return nsu.manasyan.netsnake.out.SnakesProto.internal_static_snakes_GamePlayers_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return nsu.manasyan.netsnake.out.SnakesProto.internal_static_snakes_GamePlayers_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                nsu.manasyan.netsnake.out.SnakesProto.GamePlayers.class, nsu.manasyan.netsnake.out.SnakesProto.GamePlayers.Builder.class);
      }

      // Construct using nsu.manasyan.netsnake.out.SnakesProto.GamePlayers.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getMasterFieldBuilder();
          getOthersFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (masterBuilder_ == null) {
          master_ = null;
        } else {
          masterBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (othersBuilder_ == null) {
          others_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          othersBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return nsu.manasyan.netsnake.out.SnakesProto.internal_static_snakes_GamePlayers_descriptor;
      }

      @java.lang.Override
      public nsu.manasyan.netsnake.out.SnakesProto.GamePlayers getDefaultInstanceForType() {
        return nsu.manasyan.netsnake.out.SnakesProto.GamePlayers.getDefaultInstance();
      }

      @java.lang.Override
      public nsu.manasyan.netsnake.out.SnakesProto.GamePlayers build() {
        nsu.manasyan.netsnake.out.SnakesProto.GamePlayers result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public nsu.manasyan.netsnake.out.SnakesProto.GamePlayers buildPartial() {
        nsu.manasyan.netsnake.out.SnakesProto.GamePlayers result = new nsu.manasyan.netsnake.out.SnakesProto.GamePlayers(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          if (masterBuilder_ == null) {
            result.master_ = master_;
          } else {
            result.master_ = masterBuilder_.build();
          }
          to_bitField0_ |= 0x00000001;
        }
        if (othersBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            others_ = java.util.Collections.unmodifiableList(others_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.others_ = others_;
        } else {
          result.others_ = othersBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof nsu.manasyan.netsnake.out.SnakesProto.GamePlayers) {
          return mergeFrom((nsu.manasyan.netsnake.out.SnakesProto.GamePlayers)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(nsu.manasyan.netsnake.out.SnakesProto.GamePlayers other) {
        if (other == nsu.manasyan.netsnake.out.SnakesProto.GamePlayers.getDefaultInstance()) return this;
        if (other.hasMaster()) {
          mergeMaster(other.getMaster());
        }
        if (othersBuilder_ == null) {
          if (!other.others_.isEmpty()) {
            if (others_.isEmpty()) {
              others_ = other.others_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureOthersIsMutable();
              others_.addAll(other.others_);
            }
            onChanged();
          }
        } else {
          if (!other.others_.isEmpty()) {
            if (othersBuilder_.isEmpty()) {
              othersBuilder_.dispose();
              othersBuilder_ = null;
              others_ = other.others_;
              bitField0_ = (bitField0_ & ~0x00000002);
              othersBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getOthersFieldBuilder() : null;
            } else {
              othersBuilder_.addAllMessages(other.others_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasMaster()) {
          return false;
        }
        if (!getMaster().isInitialized()) {
          return false;
        }
        for (int i = 0; i < getOthersCount(); i++) {
          if (!getOthers(i).isInitialized()) {
            return false;
          }
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        nsu.manasyan.netsnake.out.SnakesProto.GamePlayers parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (nsu.manasyan.netsnake.out.SnakesProto.GamePlayers) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private nsu.manasyan.netsnake.out.SnakesProto.GamePlayer master_;
      private com.google.protobuf.SingleFieldBuilderV3<
          nsu.manasyan.netsnake.out.SnakesProto.GamePlayer, nsu.manasyan.netsnake.out.SnakesProto.GamePlayer.Builder, nsu.manasyan.netsnake.out.SnakesProto.GamePlayerOrBuilder> masterBuilder_;
      /**
       * <pre>
       * "Главный" игрок, центр топологии "звезда"
       * </pre>
       *
       * <code>required .snakes.GamePlayer master = 1;</code>
       * @return Whether the master field is set.
       */
      public boolean hasMaster() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * "Главный" игрок, центр топологии "звезда"
       * </pre>
       *
       * <code>required .snakes.GamePlayer master = 1;</code>
       * @return The master.
       */
      public nsu.manasyan.netsnake.out.SnakesProto.GamePlayer getMaster() {
        if (masterBuilder_ == null) {
          return master_ == null ? nsu.manasyan.netsnake.out.SnakesProto.GamePlayer.getDefaultInstance() : master_;
        } else {
          return masterBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * "Главный" игрок, центр топологии "звезда"
       * </pre>
       *
       * <code>required .snakes.GamePlayer master = 1;</code>
       */
      public Builder setMaster(nsu.manasyan.netsnake.out.SnakesProto.GamePlayer value) {
        if (masterBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          master_ = value;
          onChanged();
        } else {
          masterBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <pre>
       * "Главный" игрок, центр топологии "звезда"
       * </pre>
       *
       * <code>required .snakes.GamePlayer master = 1;</code>
       */
      public Builder setMaster(
          nsu.manasyan.netsnake.out.SnakesProto.GamePlayer.Builder builderForValue) {
        if (masterBuilder_ == null) {
          master_ = builderForValue.build();
          onChanged();
        } else {
          masterBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <pre>
       * "Главный" игрок, центр топологии "звезда"
       * </pre>
       *
       * <code>required .snakes.GamePlayer master = 1;</code>
       */
      public Builder mergeMaster(nsu.manasyan.netsnake.out.SnakesProto.GamePlayer value) {
        if (masterBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
              master_ != null &&
              master_ != nsu.manasyan.netsnake.out.SnakesProto.GamePlayer.getDefaultInstance()) {
            master_ =
              nsu.manasyan.netsnake.out.SnakesProto.GamePlayer.newBuilder(master_).mergeFrom(value).buildPartial();
          } else {
            master_ = value;
          }
          onChanged();
        } else {
          masterBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <pre>
       * "Главный" игрок, центр топологии "звезда"
       * </pre>
       *
       * <code>required .snakes.GamePlayer master = 1;</code>
       */
      public Builder clearMaster() {
        if (masterBuilder_ == null) {
          master_ = null;
          onChanged();
        } else {
          masterBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <pre>
       * "Главный" игрок, центр топологии "звезда"
       * </pre>
       *
       * <code>required .snakes.GamePlayer master = 1;</code>
       */
      public nsu.manasyan.netsnake.out.SnakesProto.GamePlayer.Builder getMasterBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getMasterFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * "Главный" игрок, центр топологии "звезда"
       * </pre>
       *
       * <code>required .snakes.GamePlayer master = 1;</code>
       */
      public nsu.manasyan.netsnake.out.SnakesProto.GamePlayerOrBuilder getMasterOrBuilder() {
        if (masterBuilder_ != null) {
          return masterBuilder_.getMessageOrBuilder();
        } else {
          return master_ == null ?
              nsu.manasyan.netsnake.out.SnakesProto.GamePlayer.getDefaultInstance() : master_;
        }
      }
      /**
       * <pre>
       * "Главный" игрок, центр топологии "звезда"
       * </pre>
       *
       * <code>required .snakes.GamePlayer master = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          nsu.manasyan.netsnake.out.SnakesProto.GamePlayer, nsu.manasyan.netsnake.out.SnakesProto.GamePlayer.Builder, nsu.manasyan.netsnake.out.SnakesProto.GamePlayerOrBuilder> 
          getMasterFieldBuilder() {
        if (masterBuilder_ == null) {
          masterBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              nsu.manasyan.netsnake.out.SnakesProto.GamePlayer, nsu.manasyan.netsnake.out.SnakesProto.GamePlayer.Builder, nsu.manasyan.netsnake.out.SnakesProto.GamePlayerOrBuilder>(
                  getMaster(),
                  getParentForChildren(),
                  isClean());
          master_ = null;
        }
        return masterBuilder_;
      }

      private java.util.List<nsu.manasyan.netsnake.out.SnakesProto.GamePlayer> others_ =
        java.util.Collections.emptyList();
      private void ensureOthersIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          others_ = new java.util.ArrayList<nsu.manasyan.netsnake.out.SnakesProto.GamePlayer>(others_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          nsu.manasyan.netsnake.out.SnakesProto.GamePlayer, nsu.manasyan.netsnake.out.SnakesProto.GamePlayer.Builder, nsu.manasyan.netsnake.out.SnakesProto.GamePlayerOrBuilder> othersBuilder_;

      /**
       * <pre>
       * Список остальных игроков. "Заместителем" главного является игрок с минимальным id
       * </pre>
       *
       * <code>repeated .snakes.GamePlayer others = 2;</code>
       */
      public java.util.List<nsu.manasyan.netsnake.out.SnakesProto.GamePlayer> getOthersList() {
        if (othersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(others_);
        } else {
          return othersBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Список остальных игроков. "Заместителем" главного является игрок с минимальным id
       * </pre>
       *
       * <code>repeated .snakes.GamePlayer others = 2;</code>
       */
      public int getOthersCount() {
        if (othersBuilder_ == null) {
          return others_.size();
        } else {
          return othersBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Список остальных игроков. "Заместителем" главного является игрок с минимальным id
       * </pre>
       *
       * <code>repeated .snakes.GamePlayer others = 2;</code>
       */
      public nsu.manasyan.netsnake.out.SnakesProto.GamePlayer getOthers(int index) {
        if (othersBuilder_ == null) {
          return others_.get(index);
        } else {
          return othersBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Список остальных игроков. "Заместителем" главного является игрок с минимальным id
       * </pre>
       *
       * <code>repeated .snakes.GamePlayer others = 2;</code>
       */
      public Builder setOthers(
          int index, nsu.manasyan.netsnake.out.SnakesProto.GamePlayer value) {
        if (othersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOthersIsMutable();
          others_.set(index, value);
          onChanged();
        } else {
          othersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Список остальных игроков. "Заместителем" главного является игрок с минимальным id
       * </pre>
       *
       * <code>repeated .snakes.GamePlayer others = 2;</code>
       */
      public Builder setOthers(
          int index, nsu.manasyan.netsnake.out.SnakesProto.GamePlayer.Builder builderForValue) {
        if (othersBuilder_ == null) {
          ensureOthersIsMutable();
          others_.set(index, builderForValue.build());
          onChanged();
        } else {
          othersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Список остальных игроков. "Заместителем" главного является игрок с минимальным id
       * </pre>
       *
       * <code>repeated .snakes.GamePlayer others = 2;</code>
       */
      public Builder addOthers(nsu.manasyan.netsnake.out.SnakesProto.GamePlayer value) {
        if (othersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOthersIsMutable();
          others_.add(value);
          onChanged();
        } else {
          othersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Список остальных игроков. "Заместителем" главного является игрок с минимальным id
       * </pre>
       *
       * <code>repeated .snakes.GamePlayer others = 2;</code>
       */
      public Builder addOthers(
          int index, nsu.manasyan.netsnake.out.SnakesProto.GamePlayer value) {
        if (othersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOthersIsMutable();
          others_.add(index, value);
          onChanged();
        } else {
          othersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Список остальных игроков. "Заместителем" главного является игрок с минимальным id
       * </pre>
       *
       * <code>repeated .snakes.GamePlayer others = 2;</code>
       */
      public Builder addOthers(
          nsu.manasyan.netsnake.out.SnakesProto.GamePlayer.Builder builderForValue) {
        if (othersBuilder_ == null) {
          ensureOthersIsMutable();
          others_.add(builderForValue.build());
          onChanged();
        } else {
          othersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Список остальных игроков. "Заместителем" главного является игрок с минимальным id
       * </pre>
       *
       * <code>repeated .snakes.GamePlayer others = 2;</code>
       */
      public Builder addOthers(
          int index, nsu.manasyan.netsnake.out.SnakesProto.GamePlayer.Builder builderForValue) {
        if (othersBuilder_ == null) {
          ensureOthersIsMutable();
          others_.add(index, builderForValue.build());
          onChanged();
        } else {
          othersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Список остальных игроков. "Заместителем" главного является игрок с минимальным id
       * </pre>
       *
       * <code>repeated .snakes.GamePlayer others = 2;</code>
       */
      public Builder addAllOthers(
          java.lang.Iterable<? extends nsu.manasyan.netsnake.out.SnakesProto.GamePlayer> values) {
        if (othersBuilder_ == null) {
          ensureOthersIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, others_);
          onChanged();
        } else {
          othersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Список остальных игроков. "Заместителем" главного является игрок с минимальным id
       * </pre>
       *
       * <code>repeated .snakes.GamePlayer others = 2;</code>
       */
      public Builder clearOthers() {
        if (othersBuilder_ == null) {
          others_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          othersBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Список остальных игроков. "Заместителем" главного является игрок с минимальным id
       * </pre>
       *
       * <code>repeated .snakes.GamePlayer others = 2;</code>
       */
      public Builder removeOthers(int index) {
        if (othersBuilder_ == null) {
          ensureOthersIsMutable();
          others_.remove(index);
          onChanged();
        } else {
          othersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Список остальных игроков. "Заместителем" главного является игрок с минимальным id
       * </pre>
       *
       * <code>repeated .snakes.GamePlayer others = 2;</code>
       */
      public nsu.manasyan.netsnake.out.SnakesProto.GamePlayer.Builder getOthersBuilder(
          int index) {
        return getOthersFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Список остальных игроков. "Заместителем" главного является игрок с минимальным id
       * </pre>
       *
       * <code>repeated .snakes.GamePlayer others = 2;</code>
       */
      public nsu.manasyan.netsnake.out.SnakesProto.GamePlayerOrBuilder getOthersOrBuilder(
          int index) {
        if (othersBuilder_ == null) {
          return others_.get(index);  } else {
          return othersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Список остальных игроков. "Заместителем" главного является игрок с минимальным id
       * </pre>
       *
       * <code>repeated .snakes.GamePlayer others = 2;</code>
       */
      public java.util.List<? extends nsu.manasyan.netsnake.out.SnakesProto.GamePlayerOrBuilder> 
           getOthersOrBuilderList() {
        if (othersBuilder_ != null) {
          return othersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(others_);
        }
      }
      /**
       * <pre>
       * Список остальных игроков. "Заместителем" главного является игрок с минимальным id
       * </pre>
       *
       * <code>repeated .snakes.GamePlayer others = 2;</code>
       */
      public nsu.manasyan.netsnake.out.SnakesProto.GamePlayer.Builder addOthersBuilder() {
        return getOthersFieldBuilder().addBuilder(
            nsu.manasyan.netsnake.out.SnakesProto.GamePlayer.getDefaultInstance());
      }
      /**
       * <pre>
       * Список остальных игроков. "Заместителем" главного является игрок с минимальным id
       * </pre>
       *
       * <code>repeated .snakes.GamePlayer others = 2;</code>
       */
      public nsu.manasyan.netsnake.out.SnakesProto.GamePlayer.Builder addOthersBuilder(
          int index) {
        return getOthersFieldBuilder().addBuilder(
            index, nsu.manasyan.netsnake.out.SnakesProto.GamePlayer.getDefaultInstance());
      }
      /**
       * <pre>
       * Список остальных игроков. "Заместителем" главного является игрок с минимальным id
       * </pre>
       *
       * <code>repeated .snakes.GamePlayer others = 2;</code>
       */
      public java.util.List<nsu.manasyan.netsnake.out.SnakesProto.GamePlayer.Builder> 
           getOthersBuilderList() {
        return getOthersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          nsu.manasyan.netsnake.out.SnakesProto.GamePlayer, nsu.manasyan.netsnake.out.SnakesProto.GamePlayer.Builder, nsu.manasyan.netsnake.out.SnakesProto.GamePlayerOrBuilder> 
          getOthersFieldBuilder() {
        if (othersBuilder_ == null) {
          othersBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              nsu.manasyan.netsnake.out.SnakesProto.GamePlayer, nsu.manasyan.netsnake.out.SnakesProto.GamePlayer.Builder, nsu.manasyan.netsnake.out.SnakesProto.GamePlayerOrBuilder>(
                  others_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          others_ = null;
        }
        return othersBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:snakes.GamePlayers)
    }

    // @@protoc_insertion_point(class_scope:snakes.GamePlayers)
    private static final nsu.manasyan.netsnake.out.SnakesProto.GamePlayers DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new nsu.manasyan.netsnake.out.SnakesProto.GamePlayers();
    }

    public static nsu.manasyan.netsnake.out.SnakesProto.GamePlayers getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<GamePlayers>
        PARSER = new com.google.protobuf.AbstractParser<GamePlayers>() {
      @java.lang.Override
      public GamePlayers parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GamePlayers(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<GamePlayers> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GamePlayers> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public nsu.manasyan.netsnake.out.SnakesProto.GamePlayers getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface GameStateOrBuilder extends
      // @@protoc_insertion_point(interface_extends:snakes.GameState)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Порядковый номер состояния, уникален в пределах игры, монотонно возрастает
     * </pre>
     *
     * <code>required int32 state_order = 1;</code>
     * @return Whether the stateOrder field is set.
     */
    boolean hasStateOrder();
    /**
     * <pre>
     * Порядковый номер состояния, уникален в пределах игры, монотонно возрастает
     * </pre>
     *
     * <code>required int32 state_order = 1;</code>
     * @return The stateOrder.
     */
    int getStateOrder();

    /**
     * <pre>
     * Список змей
     * </pre>
     *
     * <code>repeated .snakes.GameState.Snake snakes = 2;</code>
     */
    java.util.List<nsu.manasyan.netsnake.out.SnakesProto.GameState.Snake> 
        getSnakesList();
    /**
     * <pre>
     * Список змей
     * </pre>
     *
     * <code>repeated .snakes.GameState.Snake snakes = 2;</code>
     */
    nsu.manasyan.netsnake.out.SnakesProto.GameState.Snake getSnakes(int index);
    /**
     * <pre>
     * Список змей
     * </pre>
     *
     * <code>repeated .snakes.GameState.Snake snakes = 2;</code>
     */
    int getSnakesCount();
    /**
     * <pre>
     * Список змей
     * </pre>
     *
     * <code>repeated .snakes.GameState.Snake snakes = 2;</code>
     */
    java.util.List<? extends nsu.manasyan.netsnake.out.SnakesProto.GameState.SnakeOrBuilder> 
        getSnakesOrBuilderList();
    /**
     * <pre>
     * Список змей
     * </pre>
     *
     * <code>repeated .snakes.GameState.Snake snakes = 2;</code>
     */
    nsu.manasyan.netsnake.out.SnakesProto.GameState.SnakeOrBuilder getSnakesOrBuilder(
        int index);

    /**
     * <pre>
     * Список клеток с едой
     * </pre>
     *
     * <code>repeated .snakes.GameState.Coord foods = 3;</code>
     */
    java.util.List<nsu.manasyan.netsnake.out.SnakesProto.GameState.Coord> 
        getFoodsList();
    /**
     * <pre>
     * Список клеток с едой
     * </pre>
     *
     * <code>repeated .snakes.GameState.Coord foods = 3;</code>
     */
    nsu.manasyan.netsnake.out.SnakesProto.GameState.Coord getFoods(int index);
    /**
     * <pre>
     * Список клеток с едой
     * </pre>
     *
     * <code>repeated .snakes.GameState.Coord foods = 3;</code>
     */
    int getFoodsCount();
    /**
     * <pre>
     * Список клеток с едой
     * </pre>
     *
     * <code>repeated .snakes.GameState.Coord foods = 3;</code>
     */
    java.util.List<? extends nsu.manasyan.netsnake.out.SnakesProto.GameState.CoordOrBuilder> 
        getFoodsOrBuilderList();
    /**
     * <pre>
     * Список клеток с едой
     * </pre>
     *
     * <code>repeated .snakes.GameState.Coord foods = 3;</code>
     */
    nsu.manasyan.netsnake.out.SnakesProto.GameState.CoordOrBuilder getFoodsOrBuilder(
        int index);

    /**
     * <pre>
     * Актуальнейший список игроков
     * </pre>
     *
     * <code>required .snakes.GamePlayers players = 4;</code>
     * @return Whether the players field is set.
     */
    boolean hasPlayers();
    /**
     * <pre>
     * Актуальнейший список игроков
     * </pre>
     *
     * <code>required .snakes.GamePlayers players = 4;</code>
     * @return The players.
     */
    nsu.manasyan.netsnake.out.SnakesProto.GamePlayers getPlayers();
    /**
     * <pre>
     * Актуальнейший список игроков
     * </pre>
     *
     * <code>required .snakes.GamePlayers players = 4;</code>
     */
    nsu.manasyan.netsnake.out.SnakesProto.GamePlayersOrBuilder getPlayersOrBuilder();
  }
  /**
   * <pre>
   * Текущее состояние игрового поля 
   * </pre>
   *
   * Protobuf type {@code snakes.GameState}
   */
  public  static final class GameState extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:snakes.GameState)
      GameStateOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use GameState.newBuilder() to construct.
    private GameState(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GameState() {
      snakes_ = java.util.Collections.emptyList();
      foods_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new GameState();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private GameState(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              bitField0_ |= 0x00000001;
              stateOrder_ = input.readInt32();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                snakes_ = new java.util.ArrayList<nsu.manasyan.netsnake.out.SnakesProto.GameState.Snake>();
                mutable_bitField0_ |= 0x00000002;
              }
              snakes_.add(
                  input.readMessage(nsu.manasyan.netsnake.out.SnakesProto.GameState.Snake.PARSER, extensionRegistry));
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                foods_ = new java.util.ArrayList<nsu.manasyan.netsnake.out.SnakesProto.GameState.Coord>();
                mutable_bitField0_ |= 0x00000004;
              }
              foods_.add(
                  input.readMessage(nsu.manasyan.netsnake.out.SnakesProto.GameState.Coord.PARSER, extensionRegistry));
              break;
            }
            case 34: {
              nsu.manasyan.netsnake.out.SnakesProto.GamePlayers.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) != 0)) {
                subBuilder = players_.toBuilder();
              }
              players_ = input.readMessage(nsu.manasyan.netsnake.out.SnakesProto.GamePlayers.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(players_);
                players_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          snakes_ = java.util.Collections.unmodifiableList(snakes_);
        }
        if (((mutable_bitField0_ & 0x00000004) != 0)) {
          foods_ = java.util.Collections.unmodifiableList(foods_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return nsu.manasyan.netsnake.out.SnakesProto.internal_static_snakes_GameState_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return nsu.manasyan.netsnake.out.SnakesProto.internal_static_snakes_GameState_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              nsu.manasyan.netsnake.out.SnakesProto.GameState.class, nsu.manasyan.netsnake.out.SnakesProto.GameState.Builder.class);
    }

    public interface CoordOrBuilder extends
        // @@protoc_insertion_point(interface_extends:snakes.GameState.Coord)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * По горизонтальной оси, положительное направление - вправо
       * </pre>
       *
       * <code>optional sint32 x = 1 [default = 0];</code>
       * @return Whether the x field is set.
       */
      boolean hasX();
      /**
       * <pre>
       * По горизонтальной оси, положительное направление - вправо
       * </pre>
       *
       * <code>optional sint32 x = 1 [default = 0];</code>
       * @return The x.
       */
      int getX();

      /**
       * <pre>
       * По вертикальной оси, положительное направление - вниз
       * </pre>
       *
       * <code>optional sint32 y = 2 [default = 0];</code>
       * @return Whether the y field is set.
       */
      boolean hasY();
      /**
       * <pre>
       * По вертикальной оси, положительное направление - вниз
       * </pre>
       *
       * <code>optional sint32 y = 2 [default = 0];</code>
       * @return The y.
       */
      int getY();
    }
    /**
     * <pre>
     * Координаты в пределах игрового поля, либо относительное смещение координат.
     * Левая верхняя клетка поля имеет координаты (x=0, y=0).
     * Направление смещения задаётся знаком чисел. 
     * </pre>
     *
     * Protobuf type {@code snakes.GameState.Coord}
     */
    public  static final class Coord extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:snakes.GameState.Coord)
        CoordOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Coord.newBuilder() to construct.
      private Coord(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Coord() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new Coord();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Coord(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                bitField0_ |= 0x00000001;
                x_ = input.readSInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                y_ = input.readSInt32();
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return nsu.manasyan.netsnake.out.SnakesProto.internal_static_snakes_GameState_Coord_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return nsu.manasyan.netsnake.out.SnakesProto.internal_static_snakes_GameState_Coord_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                nsu.manasyan.netsnake.out.SnakesProto.GameState.Coord.class, nsu.manasyan.netsnake.out.SnakesProto.GameState.Coord.Builder.class);
      }

      private int bitField0_;
      public static final int X_FIELD_NUMBER = 1;
      private int x_;
      /**
       * <pre>
       * По горизонтальной оси, положительное направление - вправо
       * </pre>
       *
       * <code>optional sint32 x = 1 [default = 0];</code>
       * @return Whether the x field is set.
       */
      public boolean hasX() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * По горизонтальной оси, положительное направление - вправо
       * </pre>
       *
       * <code>optional sint32 x = 1 [default = 0];</code>
       * @return The x.
       */
      public int getX() {
        return x_;
      }

      public static final int Y_FIELD_NUMBER = 2;
      private int y_;
      /**
       * <pre>
       * По вертикальной оси, положительное направление - вниз
       * </pre>
       *
       * <code>optional sint32 y = 2 [default = 0];</code>
       * @return Whether the y field is set.
       */
      public boolean hasY() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * По вертикальной оси, положительное направление - вниз
       * </pre>
       *
       * <code>optional sint32 y = 2 [default = 0];</code>
       * @return The y.
       */
      public int getY() {
        return y_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeSInt32(1, x_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          output.writeSInt32(2, y_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeSInt32Size(1, x_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeSInt32Size(2, y_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof nsu.manasyan.netsnake.out.SnakesProto.GameState.Coord)) {
          return super.equals(obj);
        }
        nsu.manasyan.netsnake.out.SnakesProto.GameState.Coord other = (nsu.manasyan.netsnake.out.SnakesProto.GameState.Coord) obj;

        if (hasX() != other.hasX()) return false;
        if (hasX()) {
          if (getX()
              != other.getX()) return false;
        }
        if (hasY() != other.hasY()) return false;
        if (hasY()) {
          if (getY()
              != other.getY()) return false;
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasX()) {
          hash = (37 * hash) + X_FIELD_NUMBER;
          hash = (53 * hash) + getX();
        }
        if (hasY()) {
          hash = (37 * hash) + Y_FIELD_NUMBER;
          hash = (53 * hash) + getY();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static nsu.manasyan.netsnake.out.SnakesProto.GameState.Coord parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nsu.manasyan.netsnake.out.SnakesProto.GameState.Coord parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nsu.manasyan.netsnake.out.SnakesProto.GameState.Coord parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nsu.manasyan.netsnake.out.SnakesProto.GameState.Coord parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nsu.manasyan.netsnake.out.SnakesProto.GameState.Coord parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nsu.manasyan.netsnake.out.SnakesProto.GameState.Coord parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nsu.manasyan.netsnake.out.SnakesProto.GameState.Coord parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static nsu.manasyan.netsnake.out.SnakesProto.GameState.Coord parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static nsu.manasyan.netsnake.out.SnakesProto.GameState.Coord parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static nsu.manasyan.netsnake.out.SnakesProto.GameState.Coord parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static nsu.manasyan.netsnake.out.SnakesProto.GameState.Coord parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static nsu.manasyan.netsnake.out.SnakesProto.GameState.Coord parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(nsu.manasyan.netsnake.out.SnakesProto.GameState.Coord prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * Координаты в пределах игрового поля, либо относительное смещение координат.
       * Левая верхняя клетка поля имеет координаты (x=0, y=0).
       * Направление смещения задаётся знаком чисел. 
       * </pre>
       *
       * Protobuf type {@code snakes.GameState.Coord}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:snakes.GameState.Coord)
          nsu.manasyan.netsnake.out.SnakesProto.GameState.CoordOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return nsu.manasyan.netsnake.out.SnakesProto.internal_static_snakes_GameState_Coord_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return nsu.manasyan.netsnake.out.SnakesProto.internal_static_snakes_GameState_Coord_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  nsu.manasyan.netsnake.out.SnakesProto.GameState.Coord.class, nsu.manasyan.netsnake.out.SnakesProto.GameState.Coord.Builder.class);
        }

        // Construct using nsu.manasyan.netsnake.out.SnakesProto.GameState.Coord.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          x_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          y_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return nsu.manasyan.netsnake.out.SnakesProto.internal_static_snakes_GameState_Coord_descriptor;
        }

        @java.lang.Override
        public nsu.manasyan.netsnake.out.SnakesProto.GameState.Coord getDefaultInstanceForType() {
          return nsu.manasyan.netsnake.out.SnakesProto.GameState.Coord.getDefaultInstance();
        }

        @java.lang.Override
        public nsu.manasyan.netsnake.out.SnakesProto.GameState.Coord build() {
          nsu.manasyan.netsnake.out.SnakesProto.GameState.Coord result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public nsu.manasyan.netsnake.out.SnakesProto.GameState.Coord buildPartial() {
          nsu.manasyan.netsnake.out.SnakesProto.GameState.Coord result = new nsu.manasyan.netsnake.out.SnakesProto.GameState.Coord(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.x_ = x_;
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.y_ = y_;
            to_bitField0_ |= 0x00000002;
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof nsu.manasyan.netsnake.out.SnakesProto.GameState.Coord) {
            return mergeFrom((nsu.manasyan.netsnake.out.SnakesProto.GameState.Coord)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(nsu.manasyan.netsnake.out.SnakesProto.GameState.Coord other) {
          if (other == nsu.manasyan.netsnake.out.SnakesProto.GameState.Coord.getDefaultInstance()) return this;
          if (other.hasX()) {
            setX(other.getX());
          }
          if (other.hasY()) {
            setY(other.getY());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          nsu.manasyan.netsnake.out.SnakesProto.GameState.Coord parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (nsu.manasyan.netsnake.out.SnakesProto.GameState.Coord) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int x_ ;
        /**
         * <pre>
         * По горизонтальной оси, положительное направление - вправо
         * </pre>
         *
         * <code>optional sint32 x = 1 [default = 0];</code>
         * @return Whether the x field is set.
         */
        public boolean hasX() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <pre>
         * По горизонтальной оси, положительное направление - вправо
         * </pre>
         *
         * <code>optional sint32 x = 1 [default = 0];</code>
         * @return The x.
         */
        public int getX() {
          return x_;
        }
        /**
         * <pre>
         * По горизонтальной оси, положительное направление - вправо
         * </pre>
         *
         * <code>optional sint32 x = 1 [default = 0];</code>
         * @param value The x to set.
         * @return This builder for chaining.
         */
        public Builder setX(int value) {
          bitField0_ |= 0x00000001;
          x_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * По горизонтальной оси, положительное направление - вправо
         * </pre>
         *
         * <code>optional sint32 x = 1 [default = 0];</code>
         * @return This builder for chaining.
         */
        public Builder clearX() {
          bitField0_ = (bitField0_ & ~0x00000001);
          x_ = 0;
          onChanged();
          return this;
        }

        private int y_ ;
        /**
         * <pre>
         * По вертикальной оси, положительное направление - вниз
         * </pre>
         *
         * <code>optional sint32 y = 2 [default = 0];</code>
         * @return Whether the y field is set.
         */
        public boolean hasY() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <pre>
         * По вертикальной оси, положительное направление - вниз
         * </pre>
         *
         * <code>optional sint32 y = 2 [default = 0];</code>
         * @return The y.
         */
        public int getY() {
          return y_;
        }
        /**
         * <pre>
         * По вертикальной оси, положительное направление - вниз
         * </pre>
         *
         * <code>optional sint32 y = 2 [default = 0];</code>
         * @param value The y to set.
         * @return This builder for chaining.
         */
        public Builder setY(int value) {
          bitField0_ |= 0x00000002;
          y_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * По вертикальной оси, положительное направление - вниз
         * </pre>
         *
         * <code>optional sint32 y = 2 [default = 0];</code>
         * @return This builder for chaining.
         */
        public Builder clearY() {
          bitField0_ = (bitField0_ & ~0x00000002);
          y_ = 0;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:snakes.GameState.Coord)
      }

      // @@protoc_insertion_point(class_scope:snakes.GameState.Coord)
      private static final nsu.manasyan.netsnake.out.SnakesProto.GameState.Coord DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new nsu.manasyan.netsnake.out.SnakesProto.GameState.Coord();
      }

      public static nsu.manasyan.netsnake.out.SnakesProto.GameState.Coord getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<Coord>
          PARSER = new com.google.protobuf.AbstractParser<Coord>() {
        @java.lang.Override
        public Coord parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Coord(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Coord> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Coord> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public nsu.manasyan.netsnake.out.SnakesProto.GameState.Coord getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface SnakeOrBuilder extends
        // @@protoc_insertion_point(interface_extends:snakes.GameState.Snake)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * Идентификатор игрока-владельца змеи, см. GamePlayer.id
       * </pre>
       *
       * <code>required int32 player_id = 1;</code>
       * @return Whether the playerId field is set.
       */
      boolean hasPlayerId();
      /**
       * <pre>
       * Идентификатор игрока-владельца змеи, см. GamePlayer.id
       * </pre>
       *
       * <code>required int32 player_id = 1;</code>
       * @return The playerId.
       */
      int getPlayerId();

      /**
       * <pre>
       * Список "ключевых" точек змеи. Первая точка хранит координаты головы змеи.
       * Каждая следующая - смещение следующей "ключевой" точки относительно предыдущей.
       * Последняя точка соответствует хвосту змеи. 
       * </pre>
       *
       * <code>repeated .snakes.GameState.Coord points = 2;</code>
       */
      java.util.List<nsu.manasyan.netsnake.out.SnakesProto.GameState.Coord> 
          getPointsList();
      /**
       * <pre>
       * Список "ключевых" точек змеи. Первая точка хранит координаты головы змеи.
       * Каждая следующая - смещение следующей "ключевой" точки относительно предыдущей.
       * Последняя точка соответствует хвосту змеи. 
       * </pre>
       *
       * <code>repeated .snakes.GameState.Coord points = 2;</code>
       */
      nsu.manasyan.netsnake.out.SnakesProto.GameState.Coord getPoints(int index);
      /**
       * <pre>
       * Список "ключевых" точек змеи. Первая точка хранит координаты головы змеи.
       * Каждая следующая - смещение следующей "ключевой" точки относительно предыдущей.
       * Последняя точка соответствует хвосту змеи. 
       * </pre>
       *
       * <code>repeated .snakes.GameState.Coord points = 2;</code>
       */
      int getPointsCount();
      /**
       * <pre>
       * Список "ключевых" точек змеи. Первая точка хранит координаты головы змеи.
       * Каждая следующая - смещение следующей "ключевой" точки относительно предыдущей.
       * Последняя точка соответствует хвосту змеи. 
       * </pre>
       *
       * <code>repeated .snakes.GameState.Coord points = 2;</code>
       */
      java.util.List<? extends nsu.manasyan.netsnake.out.SnakesProto.GameState.CoordOrBuilder> 
          getPointsOrBuilderList();
      /**
       * <pre>
       * Список "ключевых" точек змеи. Первая точка хранит координаты головы змеи.
       * Каждая следующая - смещение следующей "ключевой" точки относительно предыдущей.
       * Последняя точка соответствует хвосту змеи. 
       * </pre>
       *
       * <code>repeated .snakes.GameState.Coord points = 2;</code>
       */
      nsu.manasyan.netsnake.out.SnakesProto.GameState.CoordOrBuilder getPointsOrBuilder(
          int index);
    }
    /**
     * Protobuf type {@code snakes.GameState.Snake}
     */
    public  static final class Snake extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:snakes.GameState.Snake)
        SnakeOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Snake.newBuilder() to construct.
      private Snake(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Snake() {
        points_ = java.util.Collections.emptyList();
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new Snake();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Snake(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                bitField0_ |= 0x00000001;
                playerId_ = input.readInt32();
                break;
              }
              case 18: {
                if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                  points_ = new java.util.ArrayList<nsu.manasyan.netsnake.out.SnakesProto.GameState.Coord>();
                  mutable_bitField0_ |= 0x00000002;
                }
                points_.add(
                    input.readMessage(nsu.manasyan.netsnake.out.SnakesProto.GameState.Coord.PARSER, extensionRegistry));
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000002) != 0)) {
            points_ = java.util.Collections.unmodifiableList(points_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return nsu.manasyan.netsnake.out.SnakesProto.internal_static_snakes_GameState_Snake_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return nsu.manasyan.netsnake.out.SnakesProto.internal_static_snakes_GameState_Snake_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                nsu.manasyan.netsnake.out.SnakesProto.GameState.Snake.class, nsu.manasyan.netsnake.out.SnakesProto.GameState.Snake.Builder.class);
      }

      private int bitField0_;
      public static final int PLAYER_ID_FIELD_NUMBER = 1;
      private int playerId_;
      /**
       * <pre>
       * Идентификатор игрока-владельца змеи, см. GamePlayer.id
       * </pre>
       *
       * <code>required int32 player_id = 1;</code>
       * @return Whether the playerId field is set.
       */
      public boolean hasPlayerId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Идентификатор игрока-владельца змеи, см. GamePlayer.id
       * </pre>
       *
       * <code>required int32 player_id = 1;</code>
       * @return The playerId.
       */
      public int getPlayerId() {
        return playerId_;
      }

      public static final int POINTS_FIELD_NUMBER = 2;
      private java.util.List<nsu.manasyan.netsnake.out.SnakesProto.GameState.Coord> points_;
      /**
       * <pre>
       * Список "ключевых" точек змеи. Первая точка хранит координаты головы змеи.
       * Каждая следующая - смещение следующей "ключевой" точки относительно предыдущей.
       * Последняя точка соответствует хвосту змеи. 
       * </pre>
       *
       * <code>repeated .snakes.GameState.Coord points = 2;</code>
       */
      public java.util.List<nsu.manasyan.netsnake.out.SnakesProto.GameState.Coord> getPointsList() {
        return points_;
      }
      /**
       * <pre>
       * Список "ключевых" точек змеи. Первая точка хранит координаты головы змеи.
       * Каждая следующая - смещение следующей "ключевой" точки относительно предыдущей.
       * Последняя точка соответствует хвосту змеи. 
       * </pre>
       *
       * <code>repeated .snakes.GameState.Coord points = 2;</code>
       */
      public java.util.List<? extends nsu.manasyan.netsnake.out.SnakesProto.GameState.CoordOrBuilder> 
          getPointsOrBuilderList() {
        return points_;
      }
      /**
       * <pre>
       * Список "ключевых" точек змеи. Первая точка хранит координаты головы змеи.
       * Каждая следующая - смещение следующей "ключевой" точки относительно предыдущей.
       * Последняя точка соответствует хвосту змеи. 
       * </pre>
       *
       * <code>repeated .snakes.GameState.Coord points = 2;</code>
       */
      public int getPointsCount() {
        return points_.size();
      }
      /**
       * <pre>
       * Список "ключевых" точек змеи. Первая точка хранит координаты головы змеи.
       * Каждая следующая - смещение следующей "ключевой" точки относительно предыдущей.
       * Последняя точка соответствует хвосту змеи. 
       * </pre>
       *
       * <code>repeated .snakes.GameState.Coord points = 2;</code>
       */
      public nsu.manasyan.netsnake.out.SnakesProto.GameState.Coord getPoints(int index) {
        return points_.get(index);
      }
      /**
       * <pre>
       * Список "ключевых" точек змеи. Первая точка хранит координаты головы змеи.
       * Каждая следующая - смещение следующей "ключевой" точки относительно предыдущей.
       * Последняя точка соответствует хвосту змеи. 
       * </pre>
       *
       * <code>repeated .snakes.GameState.Coord points = 2;</code>
       */
      public nsu.manasyan.netsnake.out.SnakesProto.GameState.CoordOrBuilder getPointsOrBuilder(
          int index) {
        return points_.get(index);
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        if (!hasPlayerId()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeInt32(1, playerId_);
        }
        for (int i = 0; i < points_.size(); i++) {
          output.writeMessage(2, points_.get(i));
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, playerId_);
        }
        for (int i = 0; i < points_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, points_.get(i));
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof nsu.manasyan.netsnake.out.SnakesProto.GameState.Snake)) {
          return super.equals(obj);
        }
        nsu.manasyan.netsnake.out.SnakesProto.GameState.Snake other = (nsu.manasyan.netsnake.out.SnakesProto.GameState.Snake) obj;

        if (hasPlayerId() != other.hasPlayerId()) return false;
        if (hasPlayerId()) {
          if (getPlayerId()
              != other.getPlayerId()) return false;
        }
        if (!getPointsList()
            .equals(other.getPointsList())) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasPlayerId()) {
          hash = (37 * hash) + PLAYER_ID_FIELD_NUMBER;
          hash = (53 * hash) + getPlayerId();
        }
        if (getPointsCount() > 0) {
          hash = (37 * hash) + POINTS_FIELD_NUMBER;
          hash = (53 * hash) + getPointsList().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static nsu.manasyan.netsnake.out.SnakesProto.GameState.Snake parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nsu.manasyan.netsnake.out.SnakesProto.GameState.Snake parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nsu.manasyan.netsnake.out.SnakesProto.GameState.Snake parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nsu.manasyan.netsnake.out.SnakesProto.GameState.Snake parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nsu.manasyan.netsnake.out.SnakesProto.GameState.Snake parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static nsu.manasyan.netsnake.out.SnakesProto.GameState.Snake parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static nsu.manasyan.netsnake.out.SnakesProto.GameState.Snake parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static nsu.manasyan.netsnake.out.SnakesProto.GameState.Snake parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static nsu.manasyan.netsnake.out.SnakesProto.GameState.Snake parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static nsu.manasyan.netsnake.out.SnakesProto.GameState.Snake parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static nsu.manasyan.netsnake.out.SnakesProto.GameState.Snake parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static nsu.manasyan.netsnake.out.SnakesProto.GameState.Snake parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(nsu.manasyan.netsnake.out.SnakesProto.GameState.Snake prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code snakes.GameState.Snake}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:snakes.GameState.Snake)
          nsu.manasyan.netsnake.out.SnakesProto.GameState.SnakeOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return nsu.manasyan.netsnake.out.SnakesProto.internal_static_snakes_GameState_Snake_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return nsu.manasyan.netsnake.out.SnakesProto.internal_static_snakes_GameState_Snake_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  nsu.manasyan.netsnake.out.SnakesProto.GameState.Snake.class, nsu.manasyan.netsnake.out.SnakesProto.GameState.Snake.Builder.class);
        }

        // Construct using nsu.manasyan.netsnake.out.SnakesProto.GameState.Snake.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
            getPointsFieldBuilder();
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          playerId_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          if (pointsBuilder_ == null) {
            points_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            pointsBuilder_.clear();
          }
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return nsu.manasyan.netsnake.out.SnakesProto.internal_static_snakes_GameState_Snake_descriptor;
        }

        @java.lang.Override
        public nsu.manasyan.netsnake.out.SnakesProto.GameState.Snake getDefaultInstanceForType() {
          return nsu.manasyan.netsnake.out.SnakesProto.GameState.Snake.getDefaultInstance();
        }

        @java.lang.Override
        public nsu.manasyan.netsnake.out.SnakesProto.GameState.Snake build() {
          nsu.manasyan.netsnake.out.SnakesProto.GameState.Snake result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public nsu.manasyan.netsnake.out.SnakesProto.GameState.Snake buildPartial() {
          nsu.manasyan.netsnake.out.SnakesProto.GameState.Snake result = new nsu.manasyan.netsnake.out.SnakesProto.GameState.Snake(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.playerId_ = playerId_;
            to_bitField0_ |= 0x00000001;
          }
          if (pointsBuilder_ == null) {
            if (((bitField0_ & 0x00000002) != 0)) {
              points_ = java.util.Collections.unmodifiableList(points_);
              bitField0_ = (bitField0_ & ~0x00000002);
            }
            result.points_ = points_;
          } else {
            result.points_ = pointsBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof nsu.manasyan.netsnake.out.SnakesProto.GameState.Snake) {
            return mergeFrom((nsu.manasyan.netsnake.out.SnakesProto.GameState.Snake)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(nsu.manasyan.netsnake.out.SnakesProto.GameState.Snake other) {
          if (other == nsu.manasyan.netsnake.out.SnakesProto.GameState.Snake.getDefaultInstance()) return this;
          if (other.hasPlayerId()) {
            setPlayerId(other.getPlayerId());
          }
          if (pointsBuilder_ == null) {
            if (!other.points_.isEmpty()) {
              if (points_.isEmpty()) {
                points_ = other.points_;
                bitField0_ = (bitField0_ & ~0x00000002);
              } else {
                ensurePointsIsMutable();
                points_.addAll(other.points_);
              }
              onChanged();
            }
          } else {
            if (!other.points_.isEmpty()) {
              if (pointsBuilder_.isEmpty()) {
                pointsBuilder_.dispose();
                pointsBuilder_ = null;
                points_ = other.points_;
                bitField0_ = (bitField0_ & ~0x00000002);
                pointsBuilder_ = 
                  com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                     getPointsFieldBuilder() : null;
              } else {
                pointsBuilder_.addAllMessages(other.points_);
              }
            }
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          if (!hasPlayerId()) {
            return false;
          }
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          nsu.manasyan.netsnake.out.SnakesProto.GameState.Snake parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (nsu.manasyan.netsnake.out.SnakesProto.GameState.Snake) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int playerId_ ;
        /**
         * <pre>
         * Идентификатор игрока-владельца змеи, см. GamePlayer.id
         * </pre>
         *
         * <code>required int32 player_id = 1;</code>
         * @return Whether the playerId field is set.
         */
        public boolean hasPlayerId() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <pre>
         * Идентификатор игрока-владельца змеи, см. GamePlayer.id
         * </pre>
         *
         * <code>required int32 player_id = 1;</code>
         * @return The playerId.
         */
        public int getPlayerId() {
          return playerId_;
        }
        /**
         * <pre>
         * Идентификатор игрока-владельца змеи, см. GamePlayer.id
         * </pre>
         *
         * <code>required int32 player_id = 1;</code>
         * @param value The playerId to set.
         * @return This builder for chaining.
         */
        public Builder setPlayerId(int value) {
          bitField0_ |= 0x00000001;
          playerId_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Идентификатор игрока-владельца змеи, см. GamePlayer.id
         * </pre>
         *
         * <code>required int32 player_id = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearPlayerId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          playerId_ = 0;
          onChanged();
          return this;
        }

        private java.util.List<nsu.manasyan.netsnake.out.SnakesProto.GameState.Coord> points_ =
          java.util.Collections.emptyList();
        private void ensurePointsIsMutable() {
          if (!((bitField0_ & 0x00000002) != 0)) {
            points_ = new java.util.ArrayList<nsu.manasyan.netsnake.out.SnakesProto.GameState.Coord>(points_);
            bitField0_ |= 0x00000002;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilderV3<
            nsu.manasyan.netsnake.out.SnakesProto.GameState.Coord, nsu.manasyan.netsnake.out.SnakesProto.GameState.Coord.Builder, nsu.manasyan.netsnake.out.SnakesProto.GameState.CoordOrBuilder> pointsBuilder_;

        /**
         * <pre>
         * Список "ключевых" точек змеи. Первая точка хранит координаты головы змеи.
         * Каждая следующая - смещение следующей "ключевой" точки относительно предыдущей.
         * Последняя точка соответствует хвосту змеи. 
         * </pre>
         *
         * <code>repeated .snakes.GameState.Coord points = 2;</code>
         */
        public java.util.List<nsu.manasyan.netsnake.out.SnakesProto.GameState.Coord> getPointsList() {
          if (pointsBuilder_ == null) {
            return java.util.Collections.unmodifiableList(points_);
          } else {
            return pointsBuilder_.getMessageList();
          }
        }
        /**
         * <pre>
         * Список "ключевых" точек змеи. Первая точка хранит координаты головы змеи.
         * Каждая следующая - смещение следующей "ключевой" точки относительно предыдущей.
         * Последняя точка соответствует хвосту змеи. 
         * </pre>
         *
         * <code>repeated .snakes.GameState.Coord points = 2;</code>
         */
        public int getPointsCount() {
          if (pointsBuilder_ == null) {
            return points_.size();
          } else {
            return pointsBuilder_.getCount();
          }
        }
        /**
         * <pre>
         * Список "ключевых" точек змеи. Первая точка хранит координаты головы змеи.
         * Каждая следующая - смещение следующей "ключевой" точки относительно предыдущей.
         * Последняя точка соответствует хвосту змеи. 
         * </pre>
         *
         * <code>repeated .snakes.GameState.Coord points = 2;</code>
         */
        public nsu.manasyan.netsnake.out.SnakesProto.GameState.Coord getPoints(int index) {
          if (pointsBuilder_ == null) {
            return points_.get(index);
          } else {
            return pointsBuilder_.getMessage(index);
          }
        }
        /**
         * <pre>
         * Список "ключевых" точек змеи. Первая точка хранит координаты головы змеи.
         * Каждая следующая - смещение следующей "ключевой" точки относительно предыдущей.
         * Последняя точка соответствует хвосту змеи. 
         * </pre>
         *
         * <code>repeated .snakes.GameState.Coord points = 2;</code>
         */
        public Builder setPoints(
            int index, nsu.manasyan.netsnake.out.SnakesProto.GameState.Coord value) {
          if (pointsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensurePointsIsMutable();
            points_.set(index, value);
            onChanged();
          } else {
            pointsBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <pre>
         * Список "ключевых" точек змеи. Первая точка хранит координаты головы змеи.
         * Каждая следующая - смещение следующей "ключевой" точки относительно предыдущей.
         * Последняя точка соответствует хвосту змеи. 
         * </pre>
         *
         * <code>repeated .snakes.GameState.Coord points = 2;</code>
         */
        public Builder setPoints(
            int index, nsu.manasyan.netsnake.out.SnakesProto.GameState.Coord.Builder builderForValue) {
          if (pointsBuilder_ == null) {
            ensurePointsIsMutable();
            points_.set(index, builderForValue.build());
            onChanged();
          } else {
            pointsBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <pre>
         * Список "ключевых" точек змеи. Первая точка хранит координаты головы змеи.
         * Каждая следующая - смещение следующей "ключевой" точки относительно предыдущей.
         * Последняя точка соответствует хвосту змеи. 
         * </pre>
         *
         * <code>repeated .snakes.GameState.Coord points = 2;</code>
         */
        public Builder addPoints(nsu.manasyan.netsnake.out.SnakesProto.GameState.Coord value) {
          if (pointsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensurePointsIsMutable();
            points_.add(value);
            onChanged();
          } else {
            pointsBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <pre>
         * Список "ключевых" точек змеи. Первая точка хранит координаты головы змеи.
         * Каждая следующая - смещение следующей "ключевой" точки относительно предыдущей.
         * Последняя точка соответствует хвосту змеи. 
         * </pre>
         *
         * <code>repeated .snakes.GameState.Coord points = 2;</code>
         */
        public Builder addPoints(
            int index, nsu.manasyan.netsnake.out.SnakesProto.GameState.Coord value) {
          if (pointsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensurePointsIsMutable();
            points_.add(index, value);
            onChanged();
          } else {
            pointsBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <pre>
         * Список "ключевых" точек змеи. Первая точка хранит координаты головы змеи.
         * Каждая следующая - смещение следующей "ключевой" точки относительно предыдущей.
         * Последняя точка соответствует хвосту змеи. 
         * </pre>
         *
         * <code>repeated .snakes.GameState.Coord points = 2;</code>
         */
        public Builder addPoints(
            nsu.manasyan.netsnake.out.SnakesProto.GameState.Coord.Builder builderForValue) {
          if (pointsBuilder_ == null) {
            ensurePointsIsMutable();
            points_.add(builderForValue.build());
            onChanged();
          } else {
            pointsBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <pre>
         * Список "ключевых" точек змеи. Первая точка хранит координаты головы змеи.
         * Каждая следующая - смещение следующей "ключевой" точки относительно предыдущей.
         * Последняя точка соответствует хвосту змеи. 
         * </pre>
         *
         * <code>repeated .snakes.GameState.Coord points = 2;</code>
         */
        public Builder addPoints(
            int index, nsu.manasyan.netsnake.out.SnakesProto.GameState.Coord.Builder builderForValue) {
          if (pointsBuilder_ == null) {
            ensurePointsIsMutable();
            points_.add(index, builderForValue.build());
            onChanged();
          } else {
            pointsBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <pre>
         * Список "ключевых" точек змеи. Первая точка хранит координаты головы змеи.
         * Каждая следующая - смещение следующей "ключевой" точки относительно предыдущей.
         * Последняя точка соответствует хвосту змеи. 
         * </pre>
         *
         * <code>repeated .snakes.GameState.Coord points = 2;</code>
         */
        public Builder addAllPoints(
            java.lang.Iterable<? extends nsu.manasyan.netsnake.out.SnakesProto.GameState.Coord> values) {
          if (pointsBuilder_ == null) {
            ensurePointsIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, points_);
            onChanged();
          } else {
            pointsBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <pre>
         * Список "ключевых" точек змеи. Первая точка хранит координаты головы змеи.
         * Каждая следующая - смещение следующей "ключевой" точки относительно предыдущей.
         * Последняя точка соответствует хвосту змеи. 
         * </pre>
         *
         * <code>repeated .snakes.GameState.Coord points = 2;</code>
         */
        public Builder clearPoints() {
          if (pointsBuilder_ == null) {
            points_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000002);
            onChanged();
          } else {
            pointsBuilder_.clear();
          }
          return this;
        }
        /**
         * <pre>
         * Список "ключевых" точек змеи. Первая точка хранит координаты головы змеи.
         * Каждая следующая - смещение следующей "ключевой" точки относительно предыдущей.
         * Последняя точка соответствует хвосту змеи. 
         * </pre>
         *
         * <code>repeated .snakes.GameState.Coord points = 2;</code>
         */
        public Builder removePoints(int index) {
          if (pointsBuilder_ == null) {
            ensurePointsIsMutable();
            points_.remove(index);
            onChanged();
          } else {
            pointsBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <pre>
         * Список "ключевых" точек змеи. Первая точка хранит координаты головы змеи.
         * Каждая следующая - смещение следующей "ключевой" точки относительно предыдущей.
         * Последняя точка соответствует хвосту змеи. 
         * </pre>
         *
         * <code>repeated .snakes.GameState.Coord points = 2;</code>
         */
        public nsu.manasyan.netsnake.out.SnakesProto.GameState.Coord.Builder getPointsBuilder(
            int index) {
          return getPointsFieldBuilder().getBuilder(index);
        }
        /**
         * <pre>
         * Список "ключевых" точек змеи. Первая точка хранит координаты головы змеи.
         * Каждая следующая - смещение следующей "ключевой" точки относительно предыдущей.
         * Последняя точка соответствует хвосту змеи. 
         * </pre>
         *
         * <code>repeated .snakes.GameState.Coord points = 2;</code>
         */
        public nsu.manasyan.netsnake.out.SnakesProto.GameState.CoordOrBuilder getPointsOrBuilder(
            int index) {
          if (pointsBuilder_ == null) {
            return points_.get(index);  } else {
            return pointsBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <pre>
         * Список "ключевых" точек змеи. Первая точка хранит координаты головы змеи.
         * Каждая следующая - смещение следующей "ключевой" точки относительно предыдущей.
         * Последняя точка соответствует хвосту змеи. 
         * </pre>
         *
         * <code>repeated .snakes.GameState.Coord points = 2;</code>
         */
        public java.util.List<? extends nsu.manasyan.netsnake.out.SnakesProto.GameState.CoordOrBuilder> 
             getPointsOrBuilderList() {
          if (pointsBuilder_ != null) {
            return pointsBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(points_);
          }
        }
        /**
         * <pre>
         * Список "ключевых" точек змеи. Первая точка хранит координаты головы змеи.
         * Каждая следующая - смещение следующей "ключевой" точки относительно предыдущей.
         * Последняя точка соответствует хвосту змеи. 
         * </pre>
         *
         * <code>repeated .snakes.GameState.Coord points = 2;</code>
         */
        public nsu.manasyan.netsnake.out.SnakesProto.GameState.Coord.Builder addPointsBuilder() {
          return getPointsFieldBuilder().addBuilder(
              nsu.manasyan.netsnake.out.SnakesProto.GameState.Coord.getDefaultInstance());
        }
        /**
         * <pre>
         * Список "ключевых" точек змеи. Первая точка хранит координаты головы змеи.
         * Каждая следующая - смещение следующей "ключевой" точки относительно предыдущей.
         * Последняя точка соответствует хвосту змеи. 
         * </pre>
         *
         * <code>repeated .snakes.GameState.Coord points = 2;</code>
         */
        public nsu.manasyan.netsnake.out.SnakesProto.GameState.Coord.Builder addPointsBuilder(
            int index) {
          return getPointsFieldBuilder().addBuilder(
              index, nsu.manasyan.netsnake.out.SnakesProto.GameState.Coord.getDefaultInstance());
        }
        /**
         * <pre>
         * Список "ключевых" точек змеи. Первая точка хранит координаты головы змеи.
         * Каждая следующая - смещение следующей "ключевой" точки относительно предыдущей.
         * Последняя точка соответствует хвосту змеи. 
         * </pre>
         *
         * <code>repeated .snakes.GameState.Coord points = 2;</code>
         */
        public java.util.List<nsu.manasyan.netsnake.out.SnakesProto.GameState.Coord.Builder> 
             getPointsBuilderList() {
          return getPointsFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilderV3<
            nsu.manasyan.netsnake.out.SnakesProto.GameState.Coord, nsu.manasyan.netsnake.out.SnakesProto.GameState.Coord.Builder, nsu.manasyan.netsnake.out.SnakesProto.GameState.CoordOrBuilder> 
            getPointsFieldBuilder() {
          if (pointsBuilder_ == null) {
            pointsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                nsu.manasyan.netsnake.out.SnakesProto.GameState.Coord, nsu.manasyan.netsnake.out.SnakesProto.GameState.Coord.Builder, nsu.manasyan.netsnake.out.SnakesProto.GameState.CoordOrBuilder>(
                    points_,
                    ((bitField0_ & 0x00000002) != 0),
                    getParentForChildren(),
                    isClean());
            points_ = null;
          }
          return pointsBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:snakes.GameState.Snake)
      }

      // @@protoc_insertion_point(class_scope:snakes.GameState.Snake)
      private static final nsu.manasyan.netsnake.out.SnakesProto.GameState.Snake DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new nsu.manasyan.netsnake.out.SnakesProto.GameState.Snake();
      }

      public static nsu.manasyan.netsnake.out.SnakesProto.GameState.Snake getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<Snake>
          PARSER = new com.google.protobuf.AbstractParser<Snake>() {
        @java.lang.Override
        public Snake parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Snake(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Snake> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Snake> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public nsu.manasyan.netsnake.out.SnakesProto.GameState.Snake getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int STATE_ORDER_FIELD_NUMBER = 1;
    private int stateOrder_;
    /**
     * <pre>
     * Порядковый номер состояния, уникален в пределах игры, монотонно возрастает
     * </pre>
     *
     * <code>required int32 state_order = 1;</code>
     * @return Whether the stateOrder field is set.
     */
    public boolean hasStateOrder() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Порядковый номер состояния, уникален в пределах игры, монотонно возрастает
     * </pre>
     *
     * <code>required int32 state_order = 1;</code>
     * @return The stateOrder.
     */
    public int getStateOrder() {
      return stateOrder_;
    }

    public static final int SNAKES_FIELD_NUMBER = 2;
    private java.util.List<nsu.manasyan.netsnake.out.SnakesProto.GameState.Snake> snakes_;
    /**
     * <pre>
     * Список змей
     * </pre>
     *
     * <code>repeated .snakes.GameState.Snake snakes = 2;</code>
     */
    public java.util.List<nsu.manasyan.netsnake.out.SnakesProto.GameState.Snake> getSnakesList() {
      return snakes_;
    }
    /**
     * <pre>
     * Список змей
     * </pre>
     *
     * <code>repeated .snakes.GameState.Snake snakes = 2;</code>
     */
    public java.util.List<? extends nsu.manasyan.netsnake.out.SnakesProto.GameState.SnakeOrBuilder> 
        getSnakesOrBuilderList() {
      return snakes_;
    }
    /**
     * <pre>
     * Список змей
     * </pre>
     *
     * <code>repeated .snakes.GameState.Snake snakes = 2;</code>
     */
    public int getSnakesCount() {
      return snakes_.size();
    }
    /**
     * <pre>
     * Список змей
     * </pre>
     *
     * <code>repeated .snakes.GameState.Snake snakes = 2;</code>
     */
    public nsu.manasyan.netsnake.out.SnakesProto.GameState.Snake getSnakes(int index) {
      return snakes_.get(index);
    }
    /**
     * <pre>
     * Список змей
     * </pre>
     *
     * <code>repeated .snakes.GameState.Snake snakes = 2;</code>
     */
    public nsu.manasyan.netsnake.out.SnakesProto.GameState.SnakeOrBuilder getSnakesOrBuilder(
        int index) {
      return snakes_.get(index);
    }

    public static final int FOODS_FIELD_NUMBER = 3;
    private java.util.List<nsu.manasyan.netsnake.out.SnakesProto.GameState.Coord> foods_;
    /**
     * <pre>
     * Список клеток с едой
     * </pre>
     *
     * <code>repeated .snakes.GameState.Coord foods = 3;</code>
     */
    public java.util.List<nsu.manasyan.netsnake.out.SnakesProto.GameState.Coord> getFoodsList() {
      return foods_;
    }
    /**
     * <pre>
     * Список клеток с едой
     * </pre>
     *
     * <code>repeated .snakes.GameState.Coord foods = 3;</code>
     */
    public java.util.List<? extends nsu.manasyan.netsnake.out.SnakesProto.GameState.CoordOrBuilder> 
        getFoodsOrBuilderList() {
      return foods_;
    }
    /**
     * <pre>
     * Список клеток с едой
     * </pre>
     *
     * <code>repeated .snakes.GameState.Coord foods = 3;</code>
     */
    public int getFoodsCount() {
      return foods_.size();
    }
    /**
     * <pre>
     * Список клеток с едой
     * </pre>
     *
     * <code>repeated .snakes.GameState.Coord foods = 3;</code>
     */
    public nsu.manasyan.netsnake.out.SnakesProto.GameState.Coord getFoods(int index) {
      return foods_.get(index);
    }
    /**
     * <pre>
     * Список клеток с едой
     * </pre>
     *
     * <code>repeated .snakes.GameState.Coord foods = 3;</code>
     */
    public nsu.manasyan.netsnake.out.SnakesProto.GameState.CoordOrBuilder getFoodsOrBuilder(
        int index) {
      return foods_.get(index);
    }

    public static final int PLAYERS_FIELD_NUMBER = 4;
    private nsu.manasyan.netsnake.out.SnakesProto.GamePlayers players_;
    /**
     * <pre>
     * Актуальнейший список игроков
     * </pre>
     *
     * <code>required .snakes.GamePlayers players = 4;</code>
     * @return Whether the players field is set.
     */
    public boolean hasPlayers() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Актуальнейший список игроков
     * </pre>
     *
     * <code>required .snakes.GamePlayers players = 4;</code>
     * @return The players.
     */
    public nsu.manasyan.netsnake.out.SnakesProto.GamePlayers getPlayers() {
      return players_ == null ? nsu.manasyan.netsnake.out.SnakesProto.GamePlayers.getDefaultInstance() : players_;
    }
    /**
     * <pre>
     * Актуальнейший список игроков
     * </pre>
     *
     * <code>required .snakes.GamePlayers players = 4;</code>
     */
    public nsu.manasyan.netsnake.out.SnakesProto.GamePlayersOrBuilder getPlayersOrBuilder() {
      return players_ == null ? nsu.manasyan.netsnake.out.SnakesProto.GamePlayers.getDefaultInstance() : players_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasStateOrder()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPlayers()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getSnakesCount(); i++) {
        if (!getSnakes(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (!getPlayers().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeInt32(1, stateOrder_);
      }
      for (int i = 0; i < snakes_.size(); i++) {
        output.writeMessage(2, snakes_.get(i));
      }
      for (int i = 0; i < foods_.size(); i++) {
        output.writeMessage(3, foods_.get(i));
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeMessage(4, getPlayers());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, stateOrder_);
      }
      for (int i = 0; i < snakes_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, snakes_.get(i));
      }
      for (int i = 0; i < foods_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, foods_.get(i));
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getPlayers());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof nsu.manasyan.netsnake.out.SnakesProto.GameState)) {
        return super.equals(obj);
      }
      nsu.manasyan.netsnake.out.SnakesProto.GameState other = (nsu.manasyan.netsnake.out.SnakesProto.GameState) obj;

      if (hasStateOrder() != other.hasStateOrder()) return false;
      if (hasStateOrder()) {
        if (getStateOrder()
            != other.getStateOrder()) return false;
      }
      if (!getSnakesList()
          .equals(other.getSnakesList())) return false;
      if (!getFoodsList()
          .equals(other.getFoodsList())) return false;
      if (hasPlayers() != other.hasPlayers()) return false;
      if (hasPlayers()) {
        if (!getPlayers()
            .equals(other.getPlayers())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasStateOrder()) {
        hash = (37 * hash) + STATE_ORDER_FIELD_NUMBER;
        hash = (53 * hash) + getStateOrder();
      }
      if (getSnakesCount() > 0) {
        hash = (37 * hash) + SNAKES_FIELD_NUMBER;
        hash = (53 * hash) + getSnakesList().hashCode();
      }
      if (getFoodsCount() > 0) {
        hash = (37 * hash) + FOODS_FIELD_NUMBER;
        hash = (53 * hash) + getFoodsList().hashCode();
      }
      if (hasPlayers()) {
        hash = (37 * hash) + PLAYERS_FIELD_NUMBER;
        hash = (53 * hash) + getPlayers().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static nsu.manasyan.netsnake.out.SnakesProto.GameState parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nsu.manasyan.netsnake.out.SnakesProto.GameState parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nsu.manasyan.netsnake.out.SnakesProto.GameState parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nsu.manasyan.netsnake.out.SnakesProto.GameState parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nsu.manasyan.netsnake.out.SnakesProto.GameState parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nsu.manasyan.netsnake.out.SnakesProto.GameState parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nsu.manasyan.netsnake.out.SnakesProto.GameState parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static nsu.manasyan.netsnake.out.SnakesProto.GameState parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static nsu.manasyan.netsnake.out.SnakesProto.GameState parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static nsu.manasyan.netsnake.out.SnakesProto.GameState parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static nsu.manasyan.netsnake.out.SnakesProto.GameState parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static nsu.manasyan.netsnake.out.SnakesProto.GameState parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(nsu.manasyan.netsnake.out.SnakesProto.GameState prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Текущее состояние игрового поля 
     * </pre>
     *
     * Protobuf type {@code snakes.GameState}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:snakes.GameState)
        nsu.manasyan.netsnake.out.SnakesProto.GameStateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return nsu.manasyan.netsnake.out.SnakesProto.internal_static_snakes_GameState_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return nsu.manasyan.netsnake.out.SnakesProto.internal_static_snakes_GameState_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                nsu.manasyan.netsnake.out.SnakesProto.GameState.class, nsu.manasyan.netsnake.out.SnakesProto.GameState.Builder.class);
      }

      // Construct using nsu.manasyan.netsnake.out.SnakesProto.GameState.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getSnakesFieldBuilder();
          getFoodsFieldBuilder();
          getPlayersFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        stateOrder_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (snakesBuilder_ == null) {
          snakes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          snakesBuilder_.clear();
        }
        if (foodsBuilder_ == null) {
          foods_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          foodsBuilder_.clear();
        }
        if (playersBuilder_ == null) {
          players_ = null;
        } else {
          playersBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return nsu.manasyan.netsnake.out.SnakesProto.internal_static_snakes_GameState_descriptor;
      }

      @java.lang.Override
      public nsu.manasyan.netsnake.out.SnakesProto.GameState getDefaultInstanceForType() {
        return nsu.manasyan.netsnake.out.SnakesProto.GameState.getDefaultInstance();
      }

      @java.lang.Override
      public nsu.manasyan.netsnake.out.SnakesProto.GameState build() {
        nsu.manasyan.netsnake.out.SnakesProto.GameState result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public nsu.manasyan.netsnake.out.SnakesProto.GameState buildPartial() {
        nsu.manasyan.netsnake.out.SnakesProto.GameState result = new nsu.manasyan.netsnake.out.SnakesProto.GameState(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.stateOrder_ = stateOrder_;
          to_bitField0_ |= 0x00000001;
        }
        if (snakesBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            snakes_ = java.util.Collections.unmodifiableList(snakes_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.snakes_ = snakes_;
        } else {
          result.snakes_ = snakesBuilder_.build();
        }
        if (foodsBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0)) {
            foods_ = java.util.Collections.unmodifiableList(foods_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.foods_ = foods_;
        } else {
          result.foods_ = foodsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          if (playersBuilder_ == null) {
            result.players_ = players_;
          } else {
            result.players_ = playersBuilder_.build();
          }
          to_bitField0_ |= 0x00000002;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof nsu.manasyan.netsnake.out.SnakesProto.GameState) {
          return mergeFrom((nsu.manasyan.netsnake.out.SnakesProto.GameState)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(nsu.manasyan.netsnake.out.SnakesProto.GameState other) {
        if (other == nsu.manasyan.netsnake.out.SnakesProto.GameState.getDefaultInstance()) return this;
        if (other.hasStateOrder()) {
          setStateOrder(other.getStateOrder());
        }
        if (snakesBuilder_ == null) {
          if (!other.snakes_.isEmpty()) {
            if (snakes_.isEmpty()) {
              snakes_ = other.snakes_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureSnakesIsMutable();
              snakes_.addAll(other.snakes_);
            }
            onChanged();
          }
        } else {
          if (!other.snakes_.isEmpty()) {
            if (snakesBuilder_.isEmpty()) {
              snakesBuilder_.dispose();
              snakesBuilder_ = null;
              snakes_ = other.snakes_;
              bitField0_ = (bitField0_ & ~0x00000002);
              snakesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getSnakesFieldBuilder() : null;
            } else {
              snakesBuilder_.addAllMessages(other.snakes_);
            }
          }
        }
        if (foodsBuilder_ == null) {
          if (!other.foods_.isEmpty()) {
            if (foods_.isEmpty()) {
              foods_ = other.foods_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureFoodsIsMutable();
              foods_.addAll(other.foods_);
            }
            onChanged();
          }
        } else {
          if (!other.foods_.isEmpty()) {
            if (foodsBuilder_.isEmpty()) {
              foodsBuilder_.dispose();
              foodsBuilder_ = null;
              foods_ = other.foods_;
              bitField0_ = (bitField0_ & ~0x00000004);
              foodsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getFoodsFieldBuilder() : null;
            } else {
              foodsBuilder_.addAllMessages(other.foods_);
            }
          }
        }
        if (other.hasPlayers()) {
          mergePlayers(other.getPlayers());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasStateOrder()) {
          return false;
        }
        if (!hasPlayers()) {
          return false;
        }
        for (int i = 0; i < getSnakesCount(); i++) {
          if (!getSnakes(i).isInitialized()) {
            return false;
          }
        }
        if (!getPlayers().isInitialized()) {
          return false;
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        nsu.manasyan.netsnake.out.SnakesProto.GameState parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (nsu.manasyan.netsnake.out.SnakesProto.GameState) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int stateOrder_ ;
      /**
       * <pre>
       * Порядковый номер состояния, уникален в пределах игры, монотонно возрастает
       * </pre>
       *
       * <code>required int32 state_order = 1;</code>
       * @return Whether the stateOrder field is set.
       */
      public boolean hasStateOrder() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Порядковый номер состояния, уникален в пределах игры, монотонно возрастает
       * </pre>
       *
       * <code>required int32 state_order = 1;</code>
       * @return The stateOrder.
       */
      public int getStateOrder() {
        return stateOrder_;
      }
      /**
       * <pre>
       * Порядковый номер состояния, уникален в пределах игры, монотонно возрастает
       * </pre>
       *
       * <code>required int32 state_order = 1;</code>
       * @param value The stateOrder to set.
       * @return This builder for chaining.
       */
      public Builder setStateOrder(int value) {
        bitField0_ |= 0x00000001;
        stateOrder_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Порядковый номер состояния, уникален в пределах игры, монотонно возрастает
       * </pre>
       *
       * <code>required int32 state_order = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearStateOrder() {
        bitField0_ = (bitField0_ & ~0x00000001);
        stateOrder_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<nsu.manasyan.netsnake.out.SnakesProto.GameState.Snake> snakes_ =
        java.util.Collections.emptyList();
      private void ensureSnakesIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          snakes_ = new java.util.ArrayList<nsu.manasyan.netsnake.out.SnakesProto.GameState.Snake>(snakes_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          nsu.manasyan.netsnake.out.SnakesProto.GameState.Snake, nsu.manasyan.netsnake.out.SnakesProto.GameState.Snake.Builder, nsu.manasyan.netsnake.out.SnakesProto.GameState.SnakeOrBuilder> snakesBuilder_;

      /**
       * <pre>
       * Список змей
       * </pre>
       *
       * <code>repeated .snakes.GameState.Snake snakes = 2;</code>
       */
      public java.util.List<nsu.manasyan.netsnake.out.SnakesProto.GameState.Snake> getSnakesList() {
        if (snakesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(snakes_);
        } else {
          return snakesBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Список змей
       * </pre>
       *
       * <code>repeated .snakes.GameState.Snake snakes = 2;</code>
       */
      public int getSnakesCount() {
        if (snakesBuilder_ == null) {
          return snakes_.size();
        } else {
          return snakesBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Список змей
       * </pre>
       *
       * <code>repeated .snakes.GameState.Snake snakes = 2;</code>
       */
      public nsu.manasyan.netsnake.out.SnakesProto.GameState.Snake getSnakes(int index) {
        if (snakesBuilder_ == null) {
          return snakes_.get(index);
        } else {
          return snakesBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Список змей
       * </pre>
       *
       * <code>repeated .snakes.GameState.Snake snakes = 2;</code>
       */
      public Builder setSnakes(
          int index, nsu.manasyan.netsnake.out.SnakesProto.GameState.Snake value) {
        if (snakesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSnakesIsMutable();
          snakes_.set(index, value);
          onChanged();
        } else {
          snakesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Список змей
       * </pre>
       *
       * <code>repeated .snakes.GameState.Snake snakes = 2;</code>
       */
      public Builder setSnakes(
          int index, nsu.manasyan.netsnake.out.SnakesProto.GameState.Snake.Builder builderForValue) {
        if (snakesBuilder_ == null) {
          ensureSnakesIsMutable();
          snakes_.set(index, builderForValue.build());
          onChanged();
        } else {
          snakesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Список змей
       * </pre>
       *
       * <code>repeated .snakes.GameState.Snake snakes = 2;</code>
       */
      public Builder addSnakes(nsu.manasyan.netsnake.out.SnakesProto.GameState.Snake value) {
        if (snakesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSnakesIsMutable();
          snakes_.add(value);
          onChanged();
        } else {
          snakesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Список змей
       * </pre>
       *
       * <code>repeated .snakes.GameState.Snake snakes = 2;</code>
       */
      public Builder addSnakes(
          int index, nsu.manasyan.netsnake.out.SnakesProto.GameState.Snake value) {
        if (snakesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSnakesIsMutable();
          snakes_.add(index, value);
          onChanged();
        } else {
          snakesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Список змей
       * </pre>
       *
       * <code>repeated .snakes.GameState.Snake snakes = 2;</code>
       */
      public Builder addSnakes(
          nsu.manasyan.netsnake.out.SnakesProto.GameState.Snake.Builder builderForValue) {
        if (snakesBuilder_ == null) {
          ensureSnakesIsMutable();
          snakes_.add(builderForValue.build());
          onChanged();
        } else {
          snakesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Список змей
       * </pre>
       *
       * <code>repeated .snakes.GameState.Snake snakes = 2;</code>
       */
      public Builder addSnakes(
          int index, nsu.manasyan.netsnake.out.SnakesProto.GameState.Snake.Builder builderForValue) {
        if (snakesBuilder_ == null) {
          ensureSnakesIsMutable();
          snakes_.add(index, builderForValue.build());
          onChanged();
        } else {
          snakesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Список змей
       * </pre>
       *
       * <code>repeated .snakes.GameState.Snake snakes = 2;</code>
       */
      public Builder addAllSnakes(
          java.lang.Iterable<? extends nsu.manasyan.netsnake.out.SnakesProto.GameState.Snake> values) {
        if (snakesBuilder_ == null) {
          ensureSnakesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, snakes_);
          onChanged();
        } else {
          snakesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Список змей
       * </pre>
       *
       * <code>repeated .snakes.GameState.Snake snakes = 2;</code>
       */
      public Builder clearSnakes() {
        if (snakesBuilder_ == null) {
          snakes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          snakesBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Список змей
       * </pre>
       *
       * <code>repeated .snakes.GameState.Snake snakes = 2;</code>
       */
      public Builder removeSnakes(int index) {
        if (snakesBuilder_ == null) {
          ensureSnakesIsMutable();
          snakes_.remove(index);
          onChanged();
        } else {
          snakesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Список змей
       * </pre>
       *
       * <code>repeated .snakes.GameState.Snake snakes = 2;</code>
       */
      public nsu.manasyan.netsnake.out.SnakesProto.GameState.Snake.Builder getSnakesBuilder(
          int index) {
        return getSnakesFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Список змей
       * </pre>
       *
       * <code>repeated .snakes.GameState.Snake snakes = 2;</code>
       */
      public nsu.manasyan.netsnake.out.SnakesProto.GameState.SnakeOrBuilder getSnakesOrBuilder(
          int index) {
        if (snakesBuilder_ == null) {
          return snakes_.get(index);  } else {
          return snakesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Список змей
       * </pre>
       *
       * <code>repeated .snakes.GameState.Snake snakes = 2;</code>
       */
      public java.util.List<? extends nsu.manasyan.netsnake.out.SnakesProto.GameState.SnakeOrBuilder> 
           getSnakesOrBuilderList() {
        if (snakesBuilder_ != null) {
          return snakesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(snakes_);
        }
      }
      /**
       * <pre>
       * Список змей
       * </pre>
       *
       * <code>repeated .snakes.GameState.Snake snakes = 2;</code>
       */
      public nsu.manasyan.netsnake.out.SnakesProto.GameState.Snake.Builder addSnakesBuilder() {
        return getSnakesFieldBuilder().addBuilder(
            nsu.manasyan.netsnake.out.SnakesProto.GameState.Snake.getDefaultInstance());
      }
      /**
       * <pre>
       * Список змей
       * </pre>
       *
       * <code>repeated .snakes.GameState.Snake snakes = 2;</code>
       */
      public nsu.manasyan.netsnake.out.SnakesProto.GameState.Snake.Builder addSnakesBuilder(
          int index) {
        return getSnakesFieldBuilder().addBuilder(
            index, nsu.manasyan.netsnake.out.SnakesProto.GameState.Snake.getDefaultInstance());
      }
      /**
       * <pre>
       * Список змей
       * </pre>
       *
       * <code>repeated .snakes.GameState.Snake snakes = 2;</code>
       */
      public java.util.List<nsu.manasyan.netsnake.out.SnakesProto.GameState.Snake.Builder> 
           getSnakesBuilderList() {
        return getSnakesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          nsu.manasyan.netsnake.out.SnakesProto.GameState.Snake, nsu.manasyan.netsnake.out.SnakesProto.GameState.Snake.Builder, nsu.manasyan.netsnake.out.SnakesProto.GameState.SnakeOrBuilder> 
          getSnakesFieldBuilder() {
        if (snakesBuilder_ == null) {
          snakesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              nsu.manasyan.netsnake.out.SnakesProto.GameState.Snake, nsu.manasyan.netsnake.out.SnakesProto.GameState.Snake.Builder, nsu.manasyan.netsnake.out.SnakesProto.GameState.SnakeOrBuilder>(
                  snakes_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          snakes_ = null;
        }
        return snakesBuilder_;
      }

      private java.util.List<nsu.manasyan.netsnake.out.SnakesProto.GameState.Coord> foods_ =
        java.util.Collections.emptyList();
      private void ensureFoodsIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          foods_ = new java.util.ArrayList<nsu.manasyan.netsnake.out.SnakesProto.GameState.Coord>(foods_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          nsu.manasyan.netsnake.out.SnakesProto.GameState.Coord, nsu.manasyan.netsnake.out.SnakesProto.GameState.Coord.Builder, nsu.manasyan.netsnake.out.SnakesProto.GameState.CoordOrBuilder> foodsBuilder_;

      /**
       * <pre>
       * Список клеток с едой
       * </pre>
       *
       * <code>repeated .snakes.GameState.Coord foods = 3;</code>
       */
      public java.util.List<nsu.manasyan.netsnake.out.SnakesProto.GameState.Coord> getFoodsList() {
        if (foodsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(foods_);
        } else {
          return foodsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Список клеток с едой
       * </pre>
       *
       * <code>repeated .snakes.GameState.Coord foods = 3;</code>
       */
      public int getFoodsCount() {
        if (foodsBuilder_ == null) {
          return foods_.size();
        } else {
          return foodsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Список клеток с едой
       * </pre>
       *
       * <code>repeated .snakes.GameState.Coord foods = 3;</code>
       */
      public nsu.manasyan.netsnake.out.SnakesProto.GameState.Coord getFoods(int index) {
        if (foodsBuilder_ == null) {
          return foods_.get(index);
        } else {
          return foodsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Список клеток с едой
       * </pre>
       *
       * <code>repeated .snakes.GameState.Coord foods = 3;</code>
       */
      public Builder setFoods(
          int index, nsu.manasyan.netsnake.out.SnakesProto.GameState.Coord value) {
        if (foodsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFoodsIsMutable();
          foods_.set(index, value);
          onChanged();
        } else {
          foodsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Список клеток с едой
       * </pre>
       *
       * <code>repeated .snakes.GameState.Coord foods = 3;</code>
       */
      public Builder setFoods(
          int index, nsu.manasyan.netsnake.out.SnakesProto.GameState.Coord.Builder builderForValue) {
        if (foodsBuilder_ == null) {
          ensureFoodsIsMutable();
          foods_.set(index, builderForValue.build());
          onChanged();
        } else {
          foodsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Список клеток с едой
       * </pre>
       *
       * <code>repeated .snakes.GameState.Coord foods = 3;</code>
       */
      public Builder addFoods(nsu.manasyan.netsnake.out.SnakesProto.GameState.Coord value) {
        if (foodsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFoodsIsMutable();
          foods_.add(value);
          onChanged();
        } else {
          foodsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Список клеток с едой
       * </pre>
       *
       * <code>repeated .snakes.GameState.Coord foods = 3;</code>
       */
      public Builder addFoods(
          int index, nsu.manasyan.netsnake.out.SnakesProto.GameState.Coord value) {
        if (foodsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFoodsIsMutable();
          foods_.add(index, value);
          onChanged();
        } else {
          foodsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Список клеток с едой
       * </pre>
       *
       * <code>repeated .snakes.GameState.Coord foods = 3;</code>
       */
      public Builder addFoods(
          nsu.manasyan.netsnake.out.SnakesProto.GameState.Coord.Builder builderForValue) {
        if (foodsBuilder_ == null) {
          ensureFoodsIsMutable();
          foods_.add(builderForValue.build());
          onChanged();
        } else {
          foodsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Список клеток с едой
       * </pre>
       *
       * <code>repeated .snakes.GameState.Coord foods = 3;</code>
       */
      public Builder addFoods(
          int index, nsu.manasyan.netsnake.out.SnakesProto.GameState.Coord.Builder builderForValue) {
        if (foodsBuilder_ == null) {
          ensureFoodsIsMutable();
          foods_.add(index, builderForValue.build());
          onChanged();
        } else {
          foodsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Список клеток с едой
       * </pre>
       *
       * <code>repeated .snakes.GameState.Coord foods = 3;</code>
       */
      public Builder addAllFoods(
          java.lang.Iterable<? extends nsu.manasyan.netsnake.out.SnakesProto.GameState.Coord> values) {
        if (foodsBuilder_ == null) {
          ensureFoodsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, foods_);
          onChanged();
        } else {
          foodsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Список клеток с едой
       * </pre>
       *
       * <code>repeated .snakes.GameState.Coord foods = 3;</code>
       */
      public Builder clearFoods() {
        if (foodsBuilder_ == null) {
          foods_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          foodsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Список клеток с едой
       * </pre>
       *
       * <code>repeated .snakes.GameState.Coord foods = 3;</code>
       */
      public Builder removeFoods(int index) {
        if (foodsBuilder_ == null) {
          ensureFoodsIsMutable();
          foods_.remove(index);
          onChanged();
        } else {
          foodsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Список клеток с едой
       * </pre>
       *
       * <code>repeated .snakes.GameState.Coord foods = 3;</code>
       */
      public nsu.manasyan.netsnake.out.SnakesProto.GameState.Coord.Builder getFoodsBuilder(
          int index) {
        return getFoodsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Список клеток с едой
       * </pre>
       *
       * <code>repeated .snakes.GameState.Coord foods = 3;</code>
       */
      public nsu.manasyan.netsnake.out.SnakesProto.GameState.CoordOrBuilder getFoodsOrBuilder(
          int index) {
        if (foodsBuilder_ == null) {
          return foods_.get(index);  } else {
          return foodsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Список клеток с едой
       * </pre>
       *
       * <code>repeated .snakes.GameState.Coord foods = 3;</code>
       */
      public java.util.List<? extends nsu.manasyan.netsnake.out.SnakesProto.GameState.CoordOrBuilder> 
           getFoodsOrBuilderList() {
        if (foodsBuilder_ != null) {
          return foodsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(foods_);
        }
      }
      /**
       * <pre>
       * Список клеток с едой
       * </pre>
       *
       * <code>repeated .snakes.GameState.Coord foods = 3;</code>
       */
      public nsu.manasyan.netsnake.out.SnakesProto.GameState.Coord.Builder addFoodsBuilder() {
        return getFoodsFieldBuilder().addBuilder(
            nsu.manasyan.netsnake.out.SnakesProto.GameState.Coord.getDefaultInstance());
      }
      /**
       * <pre>
       * Список клеток с едой
       * </pre>
       *
       * <code>repeated .snakes.GameState.Coord foods = 3;</code>
       */
      public nsu.manasyan.netsnake.out.SnakesProto.GameState.Coord.Builder addFoodsBuilder(
          int index) {
        return getFoodsFieldBuilder().addBuilder(
            index, nsu.manasyan.netsnake.out.SnakesProto.GameState.Coord.getDefaultInstance());
      }
      /**
       * <pre>
       * Список клеток с едой
       * </pre>
       *
       * <code>repeated .snakes.GameState.Coord foods = 3;</code>
       */
      public java.util.List<nsu.manasyan.netsnake.out.SnakesProto.GameState.Coord.Builder> 
           getFoodsBuilderList() {
        return getFoodsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          nsu.manasyan.netsnake.out.SnakesProto.GameState.Coord, nsu.manasyan.netsnake.out.SnakesProto.GameState.Coord.Builder, nsu.manasyan.netsnake.out.SnakesProto.GameState.CoordOrBuilder> 
          getFoodsFieldBuilder() {
        if (foodsBuilder_ == null) {
          foodsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              nsu.manasyan.netsnake.out.SnakesProto.GameState.Coord, nsu.manasyan.netsnake.out.SnakesProto.GameState.Coord.Builder, nsu.manasyan.netsnake.out.SnakesProto.GameState.CoordOrBuilder>(
                  foods_,
                  ((bitField0_ & 0x00000004) != 0),
                  getParentForChildren(),
                  isClean());
          foods_ = null;
        }
        return foodsBuilder_;
      }

      private nsu.manasyan.netsnake.out.SnakesProto.GamePlayers players_;
      private com.google.protobuf.SingleFieldBuilderV3<
          nsu.manasyan.netsnake.out.SnakesProto.GamePlayers, nsu.manasyan.netsnake.out.SnakesProto.GamePlayers.Builder, nsu.manasyan.netsnake.out.SnakesProto.GamePlayersOrBuilder> playersBuilder_;
      /**
       * <pre>
       * Актуальнейший список игроков
       * </pre>
       *
       * <code>required .snakes.GamePlayers players = 4;</code>
       * @return Whether the players field is set.
       */
      public boolean hasPlayers() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * Актуальнейший список игроков
       * </pre>
       *
       * <code>required .snakes.GamePlayers players = 4;</code>
       * @return The players.
       */
      public nsu.manasyan.netsnake.out.SnakesProto.GamePlayers getPlayers() {
        if (playersBuilder_ == null) {
          return players_ == null ? nsu.manasyan.netsnake.out.SnakesProto.GamePlayers.getDefaultInstance() : players_;
        } else {
          return playersBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Актуальнейший список игроков
       * </pre>
       *
       * <code>required .snakes.GamePlayers players = 4;</code>
       */
      public Builder setPlayers(nsu.manasyan.netsnake.out.SnakesProto.GamePlayers value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          players_ = value;
          onChanged();
        } else {
          playersBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <pre>
       * Актуальнейший список игроков
       * </pre>
       *
       * <code>required .snakes.GamePlayers players = 4;</code>
       */
      public Builder setPlayers(
          nsu.manasyan.netsnake.out.SnakesProto.GamePlayers.Builder builderForValue) {
        if (playersBuilder_ == null) {
          players_ = builderForValue.build();
          onChanged();
        } else {
          playersBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <pre>
       * Актуальнейший список игроков
       * </pre>
       *
       * <code>required .snakes.GamePlayers players = 4;</code>
       */
      public Builder mergePlayers(nsu.manasyan.netsnake.out.SnakesProto.GamePlayers value) {
        if (playersBuilder_ == null) {
          if (((bitField0_ & 0x00000008) != 0) &&
              players_ != null &&
              players_ != nsu.manasyan.netsnake.out.SnakesProto.GamePlayers.getDefaultInstance()) {
            players_ =
              nsu.manasyan.netsnake.out.SnakesProto.GamePlayers.newBuilder(players_).mergeFrom(value).buildPartial();
          } else {
            players_ = value;
          }
          onChanged();
        } else {
          playersBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <pre>
       * Актуальнейший список игроков
       * </pre>
       *
       * <code>required .snakes.GamePlayers players = 4;</code>
       */
      public Builder clearPlayers() {
        if (playersBuilder_ == null) {
          players_ = null;
          onChanged();
        } else {
          playersBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <pre>
       * Актуальнейший список игроков
       * </pre>
       *
       * <code>required .snakes.GamePlayers players = 4;</code>
       */
      public nsu.manasyan.netsnake.out.SnakesProto.GamePlayers.Builder getPlayersBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getPlayersFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Актуальнейший список игроков
       * </pre>
       *
       * <code>required .snakes.GamePlayers players = 4;</code>
       */
      public nsu.manasyan.netsnake.out.SnakesProto.GamePlayersOrBuilder getPlayersOrBuilder() {
        if (playersBuilder_ != null) {
          return playersBuilder_.getMessageOrBuilder();
        } else {
          return players_ == null ?
              nsu.manasyan.netsnake.out.SnakesProto.GamePlayers.getDefaultInstance() : players_;
        }
      }
      /**
       * <pre>
       * Актуальнейший список игроков
       * </pre>
       *
       * <code>required .snakes.GamePlayers players = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          nsu.manasyan.netsnake.out.SnakesProto.GamePlayers, nsu.manasyan.netsnake.out.SnakesProto.GamePlayers.Builder, nsu.manasyan.netsnake.out.SnakesProto.GamePlayersOrBuilder> 
          getPlayersFieldBuilder() {
        if (playersBuilder_ == null) {
          playersBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              nsu.manasyan.netsnake.out.SnakesProto.GamePlayers, nsu.manasyan.netsnake.out.SnakesProto.GamePlayers.Builder, nsu.manasyan.netsnake.out.SnakesProto.GamePlayersOrBuilder>(
                  getPlayers(),
                  getParentForChildren(),
                  isClean());
          players_ = null;
        }
        return playersBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:snakes.GameState)
    }

    // @@protoc_insertion_point(class_scope:snakes.GameState)
    private static final nsu.manasyan.netsnake.out.SnakesProto.GameState DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new nsu.manasyan.netsnake.out.SnakesProto.GameState();
    }

    public static nsu.manasyan.netsnake.out.SnakesProto.GameState getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<GameState>
        PARSER = new com.google.protobuf.AbstractParser<GameState>() {
      @java.lang.Override
      public GameState parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GameState(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<GameState> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GameState> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public nsu.manasyan.netsnake.out.SnakesProto.GameState getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface GameAnnouncementMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:snakes.GameAnnouncementMessage)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Текущие игроки
     * </pre>
     *
     * <code>required .snakes.GamePlayers players = 1;</code>
     * @return Whether the players field is set.
     */
    boolean hasPlayers();
    /**
     * <pre>
     * Текущие игроки
     * </pre>
     *
     * <code>required .snakes.GamePlayers players = 1;</code>
     * @return The players.
     */
    nsu.manasyan.netsnake.out.SnakesProto.GamePlayers getPlayers();
    /**
     * <pre>
     * Текущие игроки
     * </pre>
     *
     * <code>required .snakes.GamePlayers players = 1;</code>
     */
    nsu.manasyan.netsnake.out.SnakesProto.GamePlayersOrBuilder getPlayersOrBuilder();

    /**
     * <pre>
     * Параметры игры
     * </pre>
     *
     * <code>required .snakes.GameConfig config = 2;</code>
     * @return Whether the config field is set.
     */
    boolean hasConfig();
    /**
     * <pre>
     * Параметры игры
     * </pre>
     *
     * <code>required .snakes.GameConfig config = 2;</code>
     * @return The config.
     */
    nsu.manasyan.netsnake.out.SnakesProto.GameConfig getConfig();
    /**
     * <pre>
     * Параметры игры
     * </pre>
     *
     * <code>required .snakes.GameConfig config = 2;</code>
     */
    nsu.manasyan.netsnake.out.SnakesProto.GameConfigOrBuilder getConfigOrBuilder();

    /**
     * <pre>
     * Можно ли новому игроку присоединиться к игре (есть ли место на поле)
     * </pre>
     *
     * <code>optional bool can_join = 3 [default = true];</code>
     * @return Whether the canJoin field is set.
     */
    boolean hasCanJoin();
    /**
     * <pre>
     * Можно ли новому игроку присоединиться к игре (есть ли место на поле)
     * </pre>
     *
     * <code>optional bool can_join = 3 [default = true];</code>
     * @return The canJoin.
     */
    boolean getCanJoin();
  }
  /**
   * <pre>
   * Уведомление об идущей игре, регулярно отправляется multicast-ом 
   * </pre>
   *
   * Protobuf type {@code snakes.GameAnnouncementMessage}
   */
  public  static final class GameAnnouncementMessage extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:snakes.GameAnnouncementMessage)
      GameAnnouncementMessageOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use GameAnnouncementMessage.newBuilder() to construct.
    private GameAnnouncementMessage(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GameAnnouncementMessage() {
      canJoin_ = true;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new GameAnnouncementMessage();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private GameAnnouncementMessage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              nsu.manasyan.netsnake.out.SnakesProto.GamePlayers.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) != 0)) {
                subBuilder = players_.toBuilder();
              }
              players_ = input.readMessage(nsu.manasyan.netsnake.out.SnakesProto.GamePlayers.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(players_);
                players_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 18: {
              nsu.manasyan.netsnake.out.SnakesProto.GameConfig.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) != 0)) {
                subBuilder = config_.toBuilder();
              }
              config_ = input.readMessage(nsu.manasyan.netsnake.out.SnakesProto.GameConfig.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(config_);
                config_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              canJoin_ = input.readBool();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return nsu.manasyan.netsnake.out.SnakesProto.internal_static_snakes_GameAnnouncementMessage_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return nsu.manasyan.netsnake.out.SnakesProto.internal_static_snakes_GameAnnouncementMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              nsu.manasyan.netsnake.out.SnakesProto.GameAnnouncementMessage.class, nsu.manasyan.netsnake.out.SnakesProto.GameAnnouncementMessage.Builder.class);
    }

    private int bitField0_;
    public static final int PLAYERS_FIELD_NUMBER = 1;
    private nsu.manasyan.netsnake.out.SnakesProto.GamePlayers players_;
    /**
     * <pre>
     * Текущие игроки
     * </pre>
     *
     * <code>required .snakes.GamePlayers players = 1;</code>
     * @return Whether the players field is set.
     */
    public boolean hasPlayers() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Текущие игроки
     * </pre>
     *
     * <code>required .snakes.GamePlayers players = 1;</code>
     * @return The players.
     */
    public nsu.manasyan.netsnake.out.SnakesProto.GamePlayers getPlayers() {
      return players_ == null ? nsu.manasyan.netsnake.out.SnakesProto.GamePlayers.getDefaultInstance() : players_;
    }
    /**
     * <pre>
     * Текущие игроки
     * </pre>
     *
     * <code>required .snakes.GamePlayers players = 1;</code>
     */
    public nsu.manasyan.netsnake.out.SnakesProto.GamePlayersOrBuilder getPlayersOrBuilder() {
      return players_ == null ? nsu.manasyan.netsnake.out.SnakesProto.GamePlayers.getDefaultInstance() : players_;
    }

    public static final int CONFIG_FIELD_NUMBER = 2;
    private nsu.manasyan.netsnake.out.SnakesProto.GameConfig config_;
    /**
     * <pre>
     * Параметры игры
     * </pre>
     *
     * <code>required .snakes.GameConfig config = 2;</code>
     * @return Whether the config field is set.
     */
    public boolean hasConfig() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Параметры игры
     * </pre>
     *
     * <code>required .snakes.GameConfig config = 2;</code>
     * @return The config.
     */
    public nsu.manasyan.netsnake.out.SnakesProto.GameConfig getConfig() {
      return config_ == null ? nsu.manasyan.netsnake.out.SnakesProto.GameConfig.getDefaultInstance() : config_;
    }
    /**
     * <pre>
     * Параметры игры
     * </pre>
     *
     * <code>required .snakes.GameConfig config = 2;</code>
     */
    public nsu.manasyan.netsnake.out.SnakesProto.GameConfigOrBuilder getConfigOrBuilder() {
      return config_ == null ? nsu.manasyan.netsnake.out.SnakesProto.GameConfig.getDefaultInstance() : config_;
    }

    public static final int CAN_JOIN_FIELD_NUMBER = 3;
    private boolean canJoin_;
    /**
     * <pre>
     * Можно ли новому игроку присоединиться к игре (есть ли место на поле)
     * </pre>
     *
     * <code>optional bool can_join = 3 [default = true];</code>
     * @return Whether the canJoin field is set.
     */
    public boolean hasCanJoin() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * Можно ли новому игроку присоединиться к игре (есть ли место на поле)
     * </pre>
     *
     * <code>optional bool can_join = 3 [default = true];</code>
     * @return The canJoin.
     */
    public boolean getCanJoin() {
      return canJoin_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasPlayers()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasConfig()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getPlayers().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(1, getPlayers());
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeMessage(2, getConfig());
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeBool(3, canJoin_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getPlayers());
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getConfig());
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, canJoin_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof nsu.manasyan.netsnake.out.SnakesProto.GameAnnouncementMessage)) {
        return super.equals(obj);
      }
      nsu.manasyan.netsnake.out.SnakesProto.GameAnnouncementMessage other = (nsu.manasyan.netsnake.out.SnakesProto.GameAnnouncementMessage) obj;

      if (hasPlayers() != other.hasPlayers()) return false;
      if (hasPlayers()) {
        if (!getPlayers()
            .equals(other.getPlayers())) return false;
      }
      if (hasConfig() != other.hasConfig()) return false;
      if (hasConfig()) {
        if (!getConfig()
            .equals(other.getConfig())) return false;
      }
      if (hasCanJoin() != other.hasCanJoin()) return false;
      if (hasCanJoin()) {
        if (getCanJoin()
            != other.getCanJoin()) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasPlayers()) {
        hash = (37 * hash) + PLAYERS_FIELD_NUMBER;
        hash = (53 * hash) + getPlayers().hashCode();
      }
      if (hasConfig()) {
        hash = (37 * hash) + CONFIG_FIELD_NUMBER;
        hash = (53 * hash) + getConfig().hashCode();
      }
      if (hasCanJoin()) {
        hash = (37 * hash) + CAN_JOIN_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getCanJoin());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static nsu.manasyan.netsnake.out.SnakesProto.GameAnnouncementMessage parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nsu.manasyan.netsnake.out.SnakesProto.GameAnnouncementMessage parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nsu.manasyan.netsnake.out.SnakesProto.GameAnnouncementMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nsu.manasyan.netsnake.out.SnakesProto.GameAnnouncementMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nsu.manasyan.netsnake.out.SnakesProto.GameAnnouncementMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nsu.manasyan.netsnake.out.SnakesProto.GameAnnouncementMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nsu.manasyan.netsnake.out.SnakesProto.GameAnnouncementMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static nsu.manasyan.netsnake.out.SnakesProto.GameAnnouncementMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static nsu.manasyan.netsnake.out.SnakesProto.GameAnnouncementMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static nsu.manasyan.netsnake.out.SnakesProto.GameAnnouncementMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static nsu.manasyan.netsnake.out.SnakesProto.GameAnnouncementMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static nsu.manasyan.netsnake.out.SnakesProto.GameAnnouncementMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(nsu.manasyan.netsnake.out.SnakesProto.GameAnnouncementMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Уведомление об идущей игре, регулярно отправляется multicast-ом 
     * </pre>
     *
     * Protobuf type {@code snakes.GameAnnouncementMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:snakes.GameAnnouncementMessage)
        nsu.manasyan.netsnake.out.SnakesProto.GameAnnouncementMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return nsu.manasyan.netsnake.out.SnakesProto.internal_static_snakes_GameAnnouncementMessage_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return nsu.manasyan.netsnake.out.SnakesProto.internal_static_snakes_GameAnnouncementMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                nsu.manasyan.netsnake.out.SnakesProto.GameAnnouncementMessage.class, nsu.manasyan.netsnake.out.SnakesProto.GameAnnouncementMessage.Builder.class);
      }

      // Construct using nsu.manasyan.netsnake.out.SnakesProto.GameAnnouncementMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getPlayersFieldBuilder();
          getConfigFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (playersBuilder_ == null) {
          players_ = null;
        } else {
          playersBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (configBuilder_ == null) {
          config_ = null;
        } else {
          configBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        canJoin_ = true;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return nsu.manasyan.netsnake.out.SnakesProto.internal_static_snakes_GameAnnouncementMessage_descriptor;
      }

      @java.lang.Override
      public nsu.manasyan.netsnake.out.SnakesProto.GameAnnouncementMessage getDefaultInstanceForType() {
        return nsu.manasyan.netsnake.out.SnakesProto.GameAnnouncementMessage.getDefaultInstance();
      }

      @java.lang.Override
      public nsu.manasyan.netsnake.out.SnakesProto.GameAnnouncementMessage build() {
        nsu.manasyan.netsnake.out.SnakesProto.GameAnnouncementMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public nsu.manasyan.netsnake.out.SnakesProto.GameAnnouncementMessage buildPartial() {
        nsu.manasyan.netsnake.out.SnakesProto.GameAnnouncementMessage result = new nsu.manasyan.netsnake.out.SnakesProto.GameAnnouncementMessage(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          if (playersBuilder_ == null) {
            result.players_ = players_;
          } else {
            result.players_ = playersBuilder_.build();
          }
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          if (configBuilder_ == null) {
            result.config_ = config_;
          } else {
            result.config_ = configBuilder_.build();
          }
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          to_bitField0_ |= 0x00000004;
        }
        result.canJoin_ = canJoin_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof nsu.manasyan.netsnake.out.SnakesProto.GameAnnouncementMessage) {
          return mergeFrom((nsu.manasyan.netsnake.out.SnakesProto.GameAnnouncementMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(nsu.manasyan.netsnake.out.SnakesProto.GameAnnouncementMessage other) {
        if (other == nsu.manasyan.netsnake.out.SnakesProto.GameAnnouncementMessage.getDefaultInstance()) return this;
        if (other.hasPlayers()) {
          mergePlayers(other.getPlayers());
        }
        if (other.hasConfig()) {
          mergeConfig(other.getConfig());
        }
        if (other.hasCanJoin()) {
          setCanJoin(other.getCanJoin());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasPlayers()) {
          return false;
        }
        if (!hasConfig()) {
          return false;
        }
        if (!getPlayers().isInitialized()) {
          return false;
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        nsu.manasyan.netsnake.out.SnakesProto.GameAnnouncementMessage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (nsu.manasyan.netsnake.out.SnakesProto.GameAnnouncementMessage) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private nsu.manasyan.netsnake.out.SnakesProto.GamePlayers players_;
      private com.google.protobuf.SingleFieldBuilderV3<
          nsu.manasyan.netsnake.out.SnakesProto.GamePlayers, nsu.manasyan.netsnake.out.SnakesProto.GamePlayers.Builder, nsu.manasyan.netsnake.out.SnakesProto.GamePlayersOrBuilder> playersBuilder_;
      /**
       * <pre>
       * Текущие игроки
       * </pre>
       *
       * <code>required .snakes.GamePlayers players = 1;</code>
       * @return Whether the players field is set.
       */
      public boolean hasPlayers() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Текущие игроки
       * </pre>
       *
       * <code>required .snakes.GamePlayers players = 1;</code>
       * @return The players.
       */
      public nsu.manasyan.netsnake.out.SnakesProto.GamePlayers getPlayers() {
        if (playersBuilder_ == null) {
          return players_ == null ? nsu.manasyan.netsnake.out.SnakesProto.GamePlayers.getDefaultInstance() : players_;
        } else {
          return playersBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Текущие игроки
       * </pre>
       *
       * <code>required .snakes.GamePlayers players = 1;</code>
       */
      public Builder setPlayers(nsu.manasyan.netsnake.out.SnakesProto.GamePlayers value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          players_ = value;
          onChanged();
        } else {
          playersBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <pre>
       * Текущие игроки
       * </pre>
       *
       * <code>required .snakes.GamePlayers players = 1;</code>
       */
      public Builder setPlayers(
          nsu.manasyan.netsnake.out.SnakesProto.GamePlayers.Builder builderForValue) {
        if (playersBuilder_ == null) {
          players_ = builderForValue.build();
          onChanged();
        } else {
          playersBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <pre>
       * Текущие игроки
       * </pre>
       *
       * <code>required .snakes.GamePlayers players = 1;</code>
       */
      public Builder mergePlayers(nsu.manasyan.netsnake.out.SnakesProto.GamePlayers value) {
        if (playersBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
              players_ != null &&
              players_ != nsu.manasyan.netsnake.out.SnakesProto.GamePlayers.getDefaultInstance()) {
            players_ =
              nsu.manasyan.netsnake.out.SnakesProto.GamePlayers.newBuilder(players_).mergeFrom(value).buildPartial();
          } else {
            players_ = value;
          }
          onChanged();
        } else {
          playersBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <pre>
       * Текущие игроки
       * </pre>
       *
       * <code>required .snakes.GamePlayers players = 1;</code>
       */
      public Builder clearPlayers() {
        if (playersBuilder_ == null) {
          players_ = null;
          onChanged();
        } else {
          playersBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <pre>
       * Текущие игроки
       * </pre>
       *
       * <code>required .snakes.GamePlayers players = 1;</code>
       */
      public nsu.manasyan.netsnake.out.SnakesProto.GamePlayers.Builder getPlayersBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getPlayersFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Текущие игроки
       * </pre>
       *
       * <code>required .snakes.GamePlayers players = 1;</code>
       */
      public nsu.manasyan.netsnake.out.SnakesProto.GamePlayersOrBuilder getPlayersOrBuilder() {
        if (playersBuilder_ != null) {
          return playersBuilder_.getMessageOrBuilder();
        } else {
          return players_ == null ?
              nsu.manasyan.netsnake.out.SnakesProto.GamePlayers.getDefaultInstance() : players_;
        }
      }
      /**
       * <pre>
       * Текущие игроки
       * </pre>
       *
       * <code>required .snakes.GamePlayers players = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          nsu.manasyan.netsnake.out.SnakesProto.GamePlayers, nsu.manasyan.netsnake.out.SnakesProto.GamePlayers.Builder, nsu.manasyan.netsnake.out.SnakesProto.GamePlayersOrBuilder> 
          getPlayersFieldBuilder() {
        if (playersBuilder_ == null) {
          playersBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              nsu.manasyan.netsnake.out.SnakesProto.GamePlayers, nsu.manasyan.netsnake.out.SnakesProto.GamePlayers.Builder, nsu.manasyan.netsnake.out.SnakesProto.GamePlayersOrBuilder>(
                  getPlayers(),
                  getParentForChildren(),
                  isClean());
          players_ = null;
        }
        return playersBuilder_;
      }

      private nsu.manasyan.netsnake.out.SnakesProto.GameConfig config_;
      private com.google.protobuf.SingleFieldBuilderV3<
          nsu.manasyan.netsnake.out.SnakesProto.GameConfig, nsu.manasyan.netsnake.out.SnakesProto.GameConfig.Builder, nsu.manasyan.netsnake.out.SnakesProto.GameConfigOrBuilder> configBuilder_;
      /**
       * <pre>
       * Параметры игры
       * </pre>
       *
       * <code>required .snakes.GameConfig config = 2;</code>
       * @return Whether the config field is set.
       */
      public boolean hasConfig() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * Параметры игры
       * </pre>
       *
       * <code>required .snakes.GameConfig config = 2;</code>
       * @return The config.
       */
      public nsu.manasyan.netsnake.out.SnakesProto.GameConfig getConfig() {
        if (configBuilder_ == null) {
          return config_ == null ? nsu.manasyan.netsnake.out.SnakesProto.GameConfig.getDefaultInstance() : config_;
        } else {
          return configBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Параметры игры
       * </pre>
       *
       * <code>required .snakes.GameConfig config = 2;</code>
       */
      public Builder setConfig(nsu.manasyan.netsnake.out.SnakesProto.GameConfig value) {
        if (configBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          config_ = value;
          onChanged();
        } else {
          configBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <pre>
       * Параметры игры
       * </pre>
       *
       * <code>required .snakes.GameConfig config = 2;</code>
       */
      public Builder setConfig(
          nsu.manasyan.netsnake.out.SnakesProto.GameConfig.Builder builderForValue) {
        if (configBuilder_ == null) {
          config_ = builderForValue.build();
          onChanged();
        } else {
          configBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <pre>
       * Параметры игры
       * </pre>
       *
       * <code>required .snakes.GameConfig config = 2;</code>
       */
      public Builder mergeConfig(nsu.manasyan.netsnake.out.SnakesProto.GameConfig value) {
        if (configBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
              config_ != null &&
              config_ != nsu.manasyan.netsnake.out.SnakesProto.GameConfig.getDefaultInstance()) {
            config_ =
              nsu.manasyan.netsnake.out.SnakesProto.GameConfig.newBuilder(config_).mergeFrom(value).buildPartial();
          } else {
            config_ = value;
          }
          onChanged();
        } else {
          configBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <pre>
       * Параметры игры
       * </pre>
       *
       * <code>required .snakes.GameConfig config = 2;</code>
       */
      public Builder clearConfig() {
        if (configBuilder_ == null) {
          config_ = null;
          onChanged();
        } else {
          configBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <pre>
       * Параметры игры
       * </pre>
       *
       * <code>required .snakes.GameConfig config = 2;</code>
       */
      public nsu.manasyan.netsnake.out.SnakesProto.GameConfig.Builder getConfigBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getConfigFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Параметры игры
       * </pre>
       *
       * <code>required .snakes.GameConfig config = 2;</code>
       */
      public nsu.manasyan.netsnake.out.SnakesProto.GameConfigOrBuilder getConfigOrBuilder() {
        if (configBuilder_ != null) {
          return configBuilder_.getMessageOrBuilder();
        } else {
          return config_ == null ?
              nsu.manasyan.netsnake.out.SnakesProto.GameConfig.getDefaultInstance() : config_;
        }
      }
      /**
       * <pre>
       * Параметры игры
       * </pre>
       *
       * <code>required .snakes.GameConfig config = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          nsu.manasyan.netsnake.out.SnakesProto.GameConfig, nsu.manasyan.netsnake.out.SnakesProto.GameConfig.Builder, nsu.manasyan.netsnake.out.SnakesProto.GameConfigOrBuilder> 
          getConfigFieldBuilder() {
        if (configBuilder_ == null) {
          configBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              nsu.manasyan.netsnake.out.SnakesProto.GameConfig, nsu.manasyan.netsnake.out.SnakesProto.GameConfig.Builder, nsu.manasyan.netsnake.out.SnakesProto.GameConfigOrBuilder>(
                  getConfig(),
                  getParentForChildren(),
                  isClean());
          config_ = null;
        }
        return configBuilder_;
      }

      private boolean canJoin_ = true;
      /**
       * <pre>
       * Можно ли новому игроку присоединиться к игре (есть ли место на поле)
       * </pre>
       *
       * <code>optional bool can_join = 3 [default = true];</code>
       * @return Whether the canJoin field is set.
       */
      public boolean hasCanJoin() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * Можно ли новому игроку присоединиться к игре (есть ли место на поле)
       * </pre>
       *
       * <code>optional bool can_join = 3 [default = true];</code>
       * @return The canJoin.
       */
      public boolean getCanJoin() {
        return canJoin_;
      }
      /**
       * <pre>
       * Можно ли новому игроку присоединиться к игре (есть ли место на поле)
       * </pre>
       *
       * <code>optional bool can_join = 3 [default = true];</code>
       * @param value The canJoin to set.
       * @return This builder for chaining.
       */
      public Builder setCanJoin(boolean value) {
        bitField0_ |= 0x00000004;
        canJoin_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Можно ли новому игроку присоединиться к игре (есть ли место на поле)
       * </pre>
       *
       * <code>optional bool can_join = 3 [default = true];</code>
       * @return This builder for chaining.
       */
      public Builder clearCanJoin() {
        bitField0_ = (bitField0_ & ~0x00000004);
        canJoin_ = true;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:snakes.GameAnnouncementMessage)
    }

    // @@protoc_insertion_point(class_scope:snakes.GameAnnouncementMessage)
    private static final nsu.manasyan.netsnake.out.SnakesProto.GameAnnouncementMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new nsu.manasyan.netsnake.out.SnakesProto.GameAnnouncementMessage();
    }

    public static nsu.manasyan.netsnake.out.SnakesProto.GameAnnouncementMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<GameAnnouncementMessage>
        PARSER = new com.google.protobuf.AbstractParser<GameAnnouncementMessage>() {
      @java.lang.Override
      public GameAnnouncementMessage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GameAnnouncementMessage(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<GameAnnouncementMessage> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GameAnnouncementMessage> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public nsu.manasyan.netsnake.out.SnakesProto.GameAnnouncementMessage getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface GameMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:snakes.GameMessage)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Тип сообщения
     * </pre>
     *
     * <code>required .snakes.GameMessage.Type type = 1;</code>
     * @return Whether the type field is set.
     */
    boolean hasType();
    /**
     * <pre>
     * Тип сообщения
     * </pre>
     *
     * <code>required .snakes.GameMessage.Type type = 1;</code>
     * @return The type.
     */
    nsu.manasyan.netsnake.out.SnakesProto.GameMessage.Type getType();

    /**
     * <pre>
     * Порядковый номер сообщения, уникален для отправителя в пределах игры, монотонно возрастает
     * </pre>
     *
     * <code>required int32 msg_seq = 2;</code>
     * @return Whether the msgSeq field is set.
     */
    boolean hasMsgSeq();
    /**
     * <pre>
     * Порядковый номер сообщения, уникален для отправителя в пределах игры, монотонно возрастает
     * </pre>
     *
     * <code>required int32 msg_seq = 2;</code>
     * @return The msgSeq.
     */
    int getMsgSeq();

    /**
     * <pre>
     * Состояние игрового поля, если type = state
     * </pre>
     *
     * <code>optional .snakes.GameState state = 3;</code>
     * @return Whether the state field is set.
     */
    boolean hasState();
    /**
     * <pre>
     * Состояние игрового поля, если type = state
     * </pre>
     *
     * <code>optional .snakes.GameState state = 3;</code>
     * @return The state.
     */
    nsu.manasyan.netsnake.out.SnakesProto.GameState getState();
    /**
     * <pre>
     * Состояние игрового поля, если type = state
     * </pre>
     *
     * <code>optional .snakes.GameState state = 3;</code>
     */
    nsu.manasyan.netsnake.out.SnakesProto.GameStateOrBuilder getStateOrBuilder();
  }
  /**
   * <pre>
   * Сообщение от одного участника игры другому участнику 
   * </pre>
   *
   * Protobuf type {@code snakes.GameMessage}
   */
  public  static final class GameMessage extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:snakes.GameMessage)
      GameMessageOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use GameMessage.newBuilder() to construct.
    private GameMessage(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GameMessage() {
      type_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new GameMessage();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private GameMessage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();
                @SuppressWarnings("deprecation")
              nsu.manasyan.netsnake.out.SnakesProto.GameMessage.Type value = nsu.manasyan.netsnake.out.SnakesProto.GameMessage.Type.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                type_ = rawValue;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              msgSeq_ = input.readInt32();
              break;
            }
            case 26: {
              nsu.manasyan.netsnake.out.SnakesProto.GameState.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) != 0)) {
                subBuilder = state_.toBuilder();
              }
              state_ = input.readMessage(nsu.manasyan.netsnake.out.SnakesProto.GameState.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(state_);
                state_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return nsu.manasyan.netsnake.out.SnakesProto.internal_static_snakes_GameMessage_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return nsu.manasyan.netsnake.out.SnakesProto.internal_static_snakes_GameMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              nsu.manasyan.netsnake.out.SnakesProto.GameMessage.class, nsu.manasyan.netsnake.out.SnakesProto.GameMessage.Builder.class);
    }

    /**
     * <pre>
     * Тип сообщения 
     * </pre>
     *
     * Protobuf enum {@code snakes.GameMessage.Type}
     */
    public enum Type
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       * Ничего не меняем, просто говорим что мы живы
       * </pre>
       *
       * <code>PING = 0;</code>
       */
      PING(0),
      /**
       * <pre>
       * Повернуть голову вверх
       * </pre>
       *
       * <code>STEER_UP = 1;</code>
       */
      STEER_UP(1),
      /**
       * <pre>
       * Повернуть голову вниз
       * </pre>
       *
       * <code>STEER_DOWN = 2;</code>
       */
      STEER_DOWN(2),
      /**
       * <pre>
       * Повернуть голову влево
       * </pre>
       *
       * <code>STEER_LEFT = 3;</code>
       */
      STEER_LEFT(3),
      /**
       * <pre>
       * Повернуть голову вправо
       * </pre>
       *
       * <code>STEER_RIGHT = 4;</code>
       */
      STEER_RIGHT(4),
      /**
       * <pre>
       * Подтверждение сообщения с таким же seq
       * </pre>
       *
       * <code>ACK = 5;</code>
       */
      ACK(5),
      /**
       * <pre>
       * Состояние игры
       * </pre>
       *
       * <code>STATE = 6;</code>
       */
      STATE(6),
      /**
       * <pre>
       * Присоединиться к игре в режиме активной игры
       * </pre>
       *
       * <code>JOIN_PLAY = 21;</code>
       */
      JOIN_PLAY(21),
      /**
       * <pre>
       * Присоединиться к игре в режиме наблюдения
       * </pre>
       *
       * <code>JOIN_WATCH = 22;</code>
       */
      JOIN_WATCH(22),
      /**
       * <pre>
       * Отказ в присоединении к игре (нет места на поле)
       * </pre>
       *
       * <code>JOIN_FAIL = 23;</code>
       */
      JOIN_FAIL(23),
      /**
       * <pre>
       * Выйти из игры, но остаёмся в режиме наблюдения, если продолжаем отправлять пинги главному
       * </pre>
       *
       * <code>QUIT = 31;</code>
       */
      QUIT(31),
      /**
       * <pre>
       * Сообщение от заместителя другим игрокам о том, что пора начинать считать его главным
       * </pre>
       *
       * <code>I_AM_MASTER = 41;</code>
       */
      I_AM_MASTER(41),
      ;

      /**
       * <pre>
       * Ничего не меняем, просто говорим что мы живы
       * </pre>
       *
       * <code>PING = 0;</code>
       */
      public static final int PING_VALUE = 0;
      /**
       * <pre>
       * Повернуть голову вверх
       * </pre>
       *
       * <code>STEER_UP = 1;</code>
       */
      public static final int STEER_UP_VALUE = 1;
      /**
       * <pre>
       * Повернуть голову вниз
       * </pre>
       *
       * <code>STEER_DOWN = 2;</code>
       */
      public static final int STEER_DOWN_VALUE = 2;
      /**
       * <pre>
       * Повернуть голову влево
       * </pre>
       *
       * <code>STEER_LEFT = 3;</code>
       */
      public static final int STEER_LEFT_VALUE = 3;
      /**
       * <pre>
       * Повернуть голову вправо
       * </pre>
       *
       * <code>STEER_RIGHT = 4;</code>
       */
      public static final int STEER_RIGHT_VALUE = 4;
      /**
       * <pre>
       * Подтверждение сообщения с таким же seq
       * </pre>
       *
       * <code>ACK = 5;</code>
       */
      public static final int ACK_VALUE = 5;
      /**
       * <pre>
       * Состояние игры
       * </pre>
       *
       * <code>STATE = 6;</code>
       */
      public static final int STATE_VALUE = 6;
      /**
       * <pre>
       * Присоединиться к игре в режиме активной игры
       * </pre>
       *
       * <code>JOIN_PLAY = 21;</code>
       */
      public static final int JOIN_PLAY_VALUE = 21;
      /**
       * <pre>
       * Присоединиться к игре в режиме наблюдения
       * </pre>
       *
       * <code>JOIN_WATCH = 22;</code>
       */
      public static final int JOIN_WATCH_VALUE = 22;
      /**
       * <pre>
       * Отказ в присоединении к игре (нет места на поле)
       * </pre>
       *
       * <code>JOIN_FAIL = 23;</code>
       */
      public static final int JOIN_FAIL_VALUE = 23;
      /**
       * <pre>
       * Выйти из игры, но остаёмся в режиме наблюдения, если продолжаем отправлять пинги главному
       * </pre>
       *
       * <code>QUIT = 31;</code>
       */
      public static final int QUIT_VALUE = 31;
      /**
       * <pre>
       * Сообщение от заместителя другим игрокам о том, что пора начинать считать его главным
       * </pre>
       *
       * <code>I_AM_MASTER = 41;</code>
       */
      public static final int I_AM_MASTER_VALUE = 41;


      public final int getNumber() {
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Type valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static Type forNumber(int value) {
        switch (value) {
          case 0: return PING;
          case 1: return STEER_UP;
          case 2: return STEER_DOWN;
          case 3: return STEER_LEFT;
          case 4: return STEER_RIGHT;
          case 5: return ACK;
          case 6: return STATE;
          case 21: return JOIN_PLAY;
          case 22: return JOIN_WATCH;
          case 23: return JOIN_FAIL;
          case 31: return QUIT;
          case 41: return I_AM_MASTER;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Type>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Type> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Type>() {
              public Type findValueByNumber(int number) {
                return Type.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return nsu.manasyan.netsnake.out.SnakesProto.GameMessage.getDescriptor().getEnumTypes().get(0);
      }

      private static final Type[] VALUES = values();

      public static Type valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Type(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:snakes.GameMessage.Type)
    }

    private int bitField0_;
    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <pre>
     * Тип сообщения
     * </pre>
     *
     * <code>required .snakes.GameMessage.Type type = 1;</code>
     * @return Whether the type field is set.
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Тип сообщения
     * </pre>
     *
     * <code>required .snakes.GameMessage.Type type = 1;</code>
     * @return The type.
     */
    public nsu.manasyan.netsnake.out.SnakesProto.GameMessage.Type getType() {
      @SuppressWarnings("deprecation")
      nsu.manasyan.netsnake.out.SnakesProto.GameMessage.Type result = nsu.manasyan.netsnake.out.SnakesProto.GameMessage.Type.valueOf(type_);
      return result == null ? nsu.manasyan.netsnake.out.SnakesProto.GameMessage.Type.PING : result;
    }

    public static final int MSG_SEQ_FIELD_NUMBER = 2;
    private int msgSeq_;
    /**
     * <pre>
     * Порядковый номер сообщения, уникален для отправителя в пределах игры, монотонно возрастает
     * </pre>
     *
     * <code>required int32 msg_seq = 2;</code>
     * @return Whether the msgSeq field is set.
     */
    public boolean hasMsgSeq() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Порядковый номер сообщения, уникален для отправителя в пределах игры, монотонно возрастает
     * </pre>
     *
     * <code>required int32 msg_seq = 2;</code>
     * @return The msgSeq.
     */
    public int getMsgSeq() {
      return msgSeq_;
    }

    public static final int STATE_FIELD_NUMBER = 3;
    private nsu.manasyan.netsnake.out.SnakesProto.GameState state_;
    /**
     * <pre>
     * Состояние игрового поля, если type = state
     * </pre>
     *
     * <code>optional .snakes.GameState state = 3;</code>
     * @return Whether the state field is set.
     */
    public boolean hasState() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * Состояние игрового поля, если type = state
     * </pre>
     *
     * <code>optional .snakes.GameState state = 3;</code>
     * @return The state.
     */
    public nsu.manasyan.netsnake.out.SnakesProto.GameState getState() {
      return state_ == null ? nsu.manasyan.netsnake.out.SnakesProto.GameState.getDefaultInstance() : state_;
    }
    /**
     * <pre>
     * Состояние игрового поля, если type = state
     * </pre>
     *
     * <code>optional .snakes.GameState state = 3;</code>
     */
    public nsu.manasyan.netsnake.out.SnakesProto.GameStateOrBuilder getStateOrBuilder() {
      return state_ == null ? nsu.manasyan.netsnake.out.SnakesProto.GameState.getDefaultInstance() : state_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMsgSeq()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasState()) {
        if (!getState().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeEnum(1, type_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeInt32(2, msgSeq_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeMessage(3, getState());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, msgSeq_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getState());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof nsu.manasyan.netsnake.out.SnakesProto.GameMessage)) {
        return super.equals(obj);
      }
      nsu.manasyan.netsnake.out.SnakesProto.GameMessage other = (nsu.manasyan.netsnake.out.SnakesProto.GameMessage) obj;

      if (hasType() != other.hasType()) return false;
      if (hasType()) {
        if (type_ != other.type_) return false;
      }
      if (hasMsgSeq() != other.hasMsgSeq()) return false;
      if (hasMsgSeq()) {
        if (getMsgSeq()
            != other.getMsgSeq()) return false;
      }
      if (hasState() != other.hasState()) return false;
      if (hasState()) {
        if (!getState()
            .equals(other.getState())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasType()) {
        hash = (37 * hash) + TYPE_FIELD_NUMBER;
        hash = (53 * hash) + type_;
      }
      if (hasMsgSeq()) {
        hash = (37 * hash) + MSG_SEQ_FIELD_NUMBER;
        hash = (53 * hash) + getMsgSeq();
      }
      if (hasState()) {
        hash = (37 * hash) + STATE_FIELD_NUMBER;
        hash = (53 * hash) + getState().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static nsu.manasyan.netsnake.out.SnakesProto.GameMessage parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nsu.manasyan.netsnake.out.SnakesProto.GameMessage parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nsu.manasyan.netsnake.out.SnakesProto.GameMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nsu.manasyan.netsnake.out.SnakesProto.GameMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nsu.manasyan.netsnake.out.SnakesProto.GameMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nsu.manasyan.netsnake.out.SnakesProto.GameMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nsu.manasyan.netsnake.out.SnakesProto.GameMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static nsu.manasyan.netsnake.out.SnakesProto.GameMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static nsu.manasyan.netsnake.out.SnakesProto.GameMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static nsu.manasyan.netsnake.out.SnakesProto.GameMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static nsu.manasyan.netsnake.out.SnakesProto.GameMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static nsu.manasyan.netsnake.out.SnakesProto.GameMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(nsu.manasyan.netsnake.out.SnakesProto.GameMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Сообщение от одного участника игры другому участнику 
     * </pre>
     *
     * Protobuf type {@code snakes.GameMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:snakes.GameMessage)
        nsu.manasyan.netsnake.out.SnakesProto.GameMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return nsu.manasyan.netsnake.out.SnakesProto.internal_static_snakes_GameMessage_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return nsu.manasyan.netsnake.out.SnakesProto.internal_static_snakes_GameMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                nsu.manasyan.netsnake.out.SnakesProto.GameMessage.class, nsu.manasyan.netsnake.out.SnakesProto.GameMessage.Builder.class);
      }

      // Construct using nsu.manasyan.netsnake.out.SnakesProto.GameMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getStateFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        type_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        msgSeq_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (stateBuilder_ == null) {
          state_ = null;
        } else {
          stateBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return nsu.manasyan.netsnake.out.SnakesProto.internal_static_snakes_GameMessage_descriptor;
      }

      @java.lang.Override
      public nsu.manasyan.netsnake.out.SnakesProto.GameMessage getDefaultInstanceForType() {
        return nsu.manasyan.netsnake.out.SnakesProto.GameMessage.getDefaultInstance();
      }

      @java.lang.Override
      public nsu.manasyan.netsnake.out.SnakesProto.GameMessage build() {
        nsu.manasyan.netsnake.out.SnakesProto.GameMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public nsu.manasyan.netsnake.out.SnakesProto.GameMessage buildPartial() {
        nsu.manasyan.netsnake.out.SnakesProto.GameMessage result = new nsu.manasyan.netsnake.out.SnakesProto.GameMessage(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.msgSeq_ = msgSeq_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          if (stateBuilder_ == null) {
            result.state_ = state_;
          } else {
            result.state_ = stateBuilder_.build();
          }
          to_bitField0_ |= 0x00000004;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof nsu.manasyan.netsnake.out.SnakesProto.GameMessage) {
          return mergeFrom((nsu.manasyan.netsnake.out.SnakesProto.GameMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(nsu.manasyan.netsnake.out.SnakesProto.GameMessage other) {
        if (other == nsu.manasyan.netsnake.out.SnakesProto.GameMessage.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasMsgSeq()) {
          setMsgSeq(other.getMsgSeq());
        }
        if (other.hasState()) {
          mergeState(other.getState());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasType()) {
          return false;
        }
        if (!hasMsgSeq()) {
          return false;
        }
        if (hasState()) {
          if (!getState().isInitialized()) {
            return false;
          }
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        nsu.manasyan.netsnake.out.SnakesProto.GameMessage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (nsu.manasyan.netsnake.out.SnakesProto.GameMessage) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int type_ = 0;
      /**
       * <pre>
       * Тип сообщения
       * </pre>
       *
       * <code>required .snakes.GameMessage.Type type = 1;</code>
       * @return Whether the type field is set.
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Тип сообщения
       * </pre>
       *
       * <code>required .snakes.GameMessage.Type type = 1;</code>
       * @return The type.
       */
      public nsu.manasyan.netsnake.out.SnakesProto.GameMessage.Type getType() {
        @SuppressWarnings("deprecation")
        nsu.manasyan.netsnake.out.SnakesProto.GameMessage.Type result = nsu.manasyan.netsnake.out.SnakesProto.GameMessage.Type.valueOf(type_);
        return result == null ? nsu.manasyan.netsnake.out.SnakesProto.GameMessage.Type.PING : result;
      }
      /**
       * <pre>
       * Тип сообщения
       * </pre>
       *
       * <code>required .snakes.GameMessage.Type type = 1;</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(nsu.manasyan.netsnake.out.SnakesProto.GameMessage.Type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Тип сообщения
       * </pre>
       *
       * <code>required .snakes.GameMessage.Type type = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = 0;
        onChanged();
        return this;
      }

      private int msgSeq_ ;
      /**
       * <pre>
       * Порядковый номер сообщения, уникален для отправителя в пределах игры, монотонно возрастает
       * </pre>
       *
       * <code>required int32 msg_seq = 2;</code>
       * @return Whether the msgSeq field is set.
       */
      public boolean hasMsgSeq() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * Порядковый номер сообщения, уникален для отправителя в пределах игры, монотонно возрастает
       * </pre>
       *
       * <code>required int32 msg_seq = 2;</code>
       * @return The msgSeq.
       */
      public int getMsgSeq() {
        return msgSeq_;
      }
      /**
       * <pre>
       * Порядковый номер сообщения, уникален для отправителя в пределах игры, монотонно возрастает
       * </pre>
       *
       * <code>required int32 msg_seq = 2;</code>
       * @param value The msgSeq to set.
       * @return This builder for chaining.
       */
      public Builder setMsgSeq(int value) {
        bitField0_ |= 0x00000002;
        msgSeq_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Порядковый номер сообщения, уникален для отправителя в пределах игры, монотонно возрастает
       * </pre>
       *
       * <code>required int32 msg_seq = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearMsgSeq() {
        bitField0_ = (bitField0_ & ~0x00000002);
        msgSeq_ = 0;
        onChanged();
        return this;
      }

      private nsu.manasyan.netsnake.out.SnakesProto.GameState state_;
      private com.google.protobuf.SingleFieldBuilderV3<
          nsu.manasyan.netsnake.out.SnakesProto.GameState, nsu.manasyan.netsnake.out.SnakesProto.GameState.Builder, nsu.manasyan.netsnake.out.SnakesProto.GameStateOrBuilder> stateBuilder_;
      /**
       * <pre>
       * Состояние игрового поля, если type = state
       * </pre>
       *
       * <code>optional .snakes.GameState state = 3;</code>
       * @return Whether the state field is set.
       */
      public boolean hasState() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * Состояние игрового поля, если type = state
       * </pre>
       *
       * <code>optional .snakes.GameState state = 3;</code>
       * @return The state.
       */
      public nsu.manasyan.netsnake.out.SnakesProto.GameState getState() {
        if (stateBuilder_ == null) {
          return state_ == null ? nsu.manasyan.netsnake.out.SnakesProto.GameState.getDefaultInstance() : state_;
        } else {
          return stateBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Состояние игрового поля, если type = state
       * </pre>
       *
       * <code>optional .snakes.GameState state = 3;</code>
       */
      public Builder setState(nsu.manasyan.netsnake.out.SnakesProto.GameState value) {
        if (stateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          state_ = value;
          onChanged();
        } else {
          stateBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <pre>
       * Состояние игрового поля, если type = state
       * </pre>
       *
       * <code>optional .snakes.GameState state = 3;</code>
       */
      public Builder setState(
          nsu.manasyan.netsnake.out.SnakesProto.GameState.Builder builderForValue) {
        if (stateBuilder_ == null) {
          state_ = builderForValue.build();
          onChanged();
        } else {
          stateBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <pre>
       * Состояние игрового поля, если type = state
       * </pre>
       *
       * <code>optional .snakes.GameState state = 3;</code>
       */
      public Builder mergeState(nsu.manasyan.netsnake.out.SnakesProto.GameState value) {
        if (stateBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0) &&
              state_ != null &&
              state_ != nsu.manasyan.netsnake.out.SnakesProto.GameState.getDefaultInstance()) {
            state_ =
              nsu.manasyan.netsnake.out.SnakesProto.GameState.newBuilder(state_).mergeFrom(value).buildPartial();
          } else {
            state_ = value;
          }
          onChanged();
        } else {
          stateBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <pre>
       * Состояние игрового поля, если type = state
       * </pre>
       *
       * <code>optional .snakes.GameState state = 3;</code>
       */
      public Builder clearState() {
        if (stateBuilder_ == null) {
          state_ = null;
          onChanged();
        } else {
          stateBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <pre>
       * Состояние игрового поля, если type = state
       * </pre>
       *
       * <code>optional .snakes.GameState state = 3;</code>
       */
      public nsu.manasyan.netsnake.out.SnakesProto.GameState.Builder getStateBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getStateFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Состояние игрового поля, если type = state
       * </pre>
       *
       * <code>optional .snakes.GameState state = 3;</code>
       */
      public nsu.manasyan.netsnake.out.SnakesProto.GameStateOrBuilder getStateOrBuilder() {
        if (stateBuilder_ != null) {
          return stateBuilder_.getMessageOrBuilder();
        } else {
          return state_ == null ?
              nsu.manasyan.netsnake.out.SnakesProto.GameState.getDefaultInstance() : state_;
        }
      }
      /**
       * <pre>
       * Состояние игрового поля, если type = state
       * </pre>
       *
       * <code>optional .snakes.GameState state = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          nsu.manasyan.netsnake.out.SnakesProto.GameState, nsu.manasyan.netsnake.out.SnakesProto.GameState.Builder, nsu.manasyan.netsnake.out.SnakesProto.GameStateOrBuilder> 
          getStateFieldBuilder() {
        if (stateBuilder_ == null) {
          stateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              nsu.manasyan.netsnake.out.SnakesProto.GameState, nsu.manasyan.netsnake.out.SnakesProto.GameState.Builder, nsu.manasyan.netsnake.out.SnakesProto.GameStateOrBuilder>(
                  getState(),
                  getParentForChildren(),
                  isClean());
          state_ = null;
        }
        return stateBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:snakes.GameMessage)
    }

    // @@protoc_insertion_point(class_scope:snakes.GameMessage)
    private static final nsu.manasyan.netsnake.out.SnakesProto.GameMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new nsu.manasyan.netsnake.out.SnakesProto.GameMessage();
    }

    public static nsu.manasyan.netsnake.out.SnakesProto.GameMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<GameMessage>
        PARSER = new com.google.protobuf.AbstractParser<GameMessage>() {
      @java.lang.Override
      public GameMessage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GameMessage(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<GameMessage> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GameMessage> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public nsu.manasyan.netsnake.out.SnakesProto.GameMessage getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_snakes_GamePlayer_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_snakes_GamePlayer_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_snakes_GameConfig_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_snakes_GameConfig_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_snakes_GamePlayers_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_snakes_GamePlayers_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_snakes_GameState_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_snakes_GameState_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_snakes_GameState_Coord_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_snakes_GameState_Coord_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_snakes_GameState_Snake_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_snakes_GameState_Snake_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_snakes_GameAnnouncementMessage_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_snakes_GameAnnouncementMessage_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_snakes_GameMessage_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_snakes_GameMessage_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\014snakes.proto\022\006snakes\"H\n\nGamePlayer\022\014\n\004" +
      "name\030\001 \002(\t\022\n\n\002id\030\002 \002(\005\022\022\n\nip_address\030\003 \002" +
      "(\t\022\014\n\004port\030\004 \002(\005\"\234\001\n\nGameConfig\022\021\n\005width" +
      "\030\001 \001(\005:\00240\022\022\n\006height\030\002 \001(\005:\00230\022\026\n\013food_s" +
      "tatic\030\003 \001(\005:\0011\022\032\n\017food_per_player\030\004 \001(\002:" +
      "\0011\022\026\n\010delay_ms\030\005 \001(\005:\0041000\022\033\n\016dead_food_" +
      "prob\030\006 \001(\002:\0030.1\"U\n\013GamePlayers\022\"\n\006master" +
      "\030\001 \002(\0132\022.snakes.GamePlayer\022\"\n\006others\030\002 \003" +
      "(\0132\022.snakes.GamePlayer\"\201\002\n\tGameState\022\023\n\013" +
      "state_order\030\001 \002(\005\022\'\n\006snakes\030\002 \003(\0132\027.snak" +
      "es.GameState.Snake\022&\n\005foods\030\003 \003(\0132\027.snak" +
      "es.GameState.Coord\022$\n\007players\030\004 \002(\0132\023.sn" +
      "akes.GamePlayers\032#\n\005Coord\022\014\n\001x\030\001 \001(\021:\0010\022" +
      "\014\n\001y\030\002 \001(\021:\0010\032C\n\005Snake\022\021\n\tplayer_id\030\001 \002(" +
      "\005\022\'\n\006points\030\002 \003(\0132\027.snakes.GameState.Coo" +
      "rd\"{\n\027GameAnnouncementMessage\022$\n\007players" +
      "\030\001 \002(\0132\023.snakes.GamePlayers\022\"\n\006config\030\002 " +
      "\002(\0132\022.snakes.GameConfig\022\026\n\010can_join\030\003 \001(" +
      "\010:\004true\"\227\002\n\013GameMessage\022&\n\004type\030\001 \002(\0162\030." +
      "snakes.GameMessage.Type\022\017\n\007msg_seq\030\002 \002(\005" +
      "\022 \n\005state\030\003 \001(\0132\021.snakes.GameState\"\254\001\n\004T" +
      "ype\022\010\n\004PING\020\000\022\014\n\010STEER_UP\020\001\022\016\n\nSTEER_DOW" +
      "N\020\002\022\016\n\nSTEER_LEFT\020\003\022\017\n\013STEER_RIGHT\020\004\022\007\n\003" +
      "ACK\020\005\022\t\n\005STATE\020\006\022\r\n\tJOIN_PLAY\020\025\022\016\n\nJOIN_" +
      "WATCH\020\026\022\r\n\tJOIN_FAIL\020\027\022\010\n\004QUIT\020\037\022\017\n\013I_AM" +
      "_MASTER\020)B(\n\031nsu.manasyan.netsnake.outB\013" +
      "SnakesProto"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_snakes_GamePlayer_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_snakes_GamePlayer_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_snakes_GamePlayer_descriptor,
        new java.lang.String[] { "Name", "Id", "IpAddress", "Port", });
    internal_static_snakes_GameConfig_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_snakes_GameConfig_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_snakes_GameConfig_descriptor,
        new java.lang.String[] { "Width", "Height", "FoodStatic", "FoodPerPlayer", "DelayMs", "DeadFoodProb", });
    internal_static_snakes_GamePlayers_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_snakes_GamePlayers_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_snakes_GamePlayers_descriptor,
        new java.lang.String[] { "Master", "Others", });
    internal_static_snakes_GameState_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_snakes_GameState_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_snakes_GameState_descriptor,
        new java.lang.String[] { "StateOrder", "Snakes", "Foods", "Players", });
    internal_static_snakes_GameState_Coord_descriptor =
      internal_static_snakes_GameState_descriptor.getNestedTypes().get(0);
    internal_static_snakes_GameState_Coord_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_snakes_GameState_Coord_descriptor,
        new java.lang.String[] { "X", "Y", });
    internal_static_snakes_GameState_Snake_descriptor =
      internal_static_snakes_GameState_descriptor.getNestedTypes().get(1);
    internal_static_snakes_GameState_Snake_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_snakes_GameState_Snake_descriptor,
        new java.lang.String[] { "PlayerId", "Points", });
    internal_static_snakes_GameAnnouncementMessage_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_snakes_GameAnnouncementMessage_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_snakes_GameAnnouncementMessage_descriptor,
        new java.lang.String[] { "Players", "Config", "CanJoin", });
    internal_static_snakes_GameMessage_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_snakes_GameMessage_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_snakes_GameMessage_descriptor,
        new java.lang.String[] { "Type", "MsgSeq", "State", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
